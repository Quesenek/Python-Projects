var Hodor = 75
def TABLE[rule(ROWS / -0.64)][i] {
	dog /= 1
}
def TABLE[TABLE[--94][-0.83]][k] {
	( -rule(( Ygritte ),destroy(ROWS) - Sansa) ) * 1
}
def betray(Jon){
	if(Stark){
	if(ROWS){
	( ( -TABLE[Stark + ( -22 )][ROWS] ) );
	foo(ROWS)
};
	Jon += ( ( ( ( Ygritte - -y ) ) ) + ( ( --15 ) ) - 0.45 + COLS * -1 - 1 / -1 )
};
	if(--95 - COLS / -0.84 + ( foo() ) / rule(TABLE[--0.74][-mislead(( --57 )) * TABLE[-640.367][TABLE[-( -47 ) * rule(-Hodor,destroy(( 1 ),100.25 / -Hodor / ( ( ( -( -0.4 ) ) ) ),COLS) / ( ( --0.41 ) ),rule(x))][-betray(bar(0.84) + -betray(-0.85,-rule(---24) / bar(( -0.5 ),Sansa),ROWS)) / destroy(bar(Sansa * -dog,---0.52 - ( COLS ) * protect(51,COLS),Stark))]]]) - --ROWS){
	Hodor *= TABLE[TABLE[bar(Ygritte)][--230.5963 / 70]][( ( ROWS ) )];
	y += ROWS
};
	Ygritte *= COLS
}
assert -bar(( -0.87 ) + Arya) / protect(TABLE[bar(Stark,betray(-ROWS,ROWS,( -Arya )))][85],-1) : "Winter is coming"
assert 0.42 : "One can not simply parse himself"
def mislead(){
	if(-0.61){
	if(-1){

} else {
	56 / COLS
}
};
	-0.54;
	if(31){
	Jon *= ( -Jon )
}
}
def mislead(){
	x /= ROWS / ( destroy() * rule(y) )
}
assert Hodor : "Nothing burns like the cold."
def protect(Jon,Stark,Sansa){
	dog *= -1
}
def TABLE[-mislead(( protect(x,bar(0.72)) ) + ROWS) * TABLE[0.54][Arya]][j] {
	Ygritte += ROWS * ( Jon * -ROWS / COLS );
	if(foo(( -Ygritte ))){
	TABLE[bar(-( -690.034 ),-30,-0.69) / -140.819][---460.739];
	x -= ---( 74 )
} else {
	if(protect(( protect(TABLE[( ( ( 25 ) ) ) / Jon / -0.89][Sansa],( -0.39 )) ))){
	if(100){
	Jon -= -941;
	Ygritte /= -0.61
} else {
	TABLE[( -Arya / ( ( Ygritte ) ) ) * 22 + -dog][COLS] * -( -1 / -440.7374 / Arya - Ygritte )
};
	if(TABLE[( -1 )][COLS]){
	if(-Arya / 0.15 * -0.63){

} else {
	Sansa *= ROWS
}
} else {
	if(( ( -y ) )){
	-( -Jon );
	Ygritte *= destroy();
	if(( -80 ) * -62){
	x /= Arya;
	x -= 830.95
}
} else {
	Sansa *= -( -COLS ) + rule(( --COLS * ( Ygritte ) ));
	TABLE[dog][ROWS] + -0.18
};
	if(( 0.11 )){
	Arya
} else {
	Stark -= bar();
	if(destroy(( x ),-0.83)){
	if(0.22){
	COLS
};
	y /= betray()
} else {
	if(destroy(COLS,-TABLE[Hodor][Ygritte] / -COLS,Hodor / bar(-x,COLS,betray(rule(),Sansa)) * ROWS)){
	ROWS;
	if(TABLE[COLS][rule()]){

}
} else {

};
	COLS;
	if(destroy(protect(),560.8,--0.67)){
	if(( Arya )){

};
	Ygritte /= 62
} else {

}
}
}
};
	if(( ( mislead(ROWS,-650.6,TABLE[rule(foo(( COLS )),TABLE[COLS][TABLE[( ROWS - ( TABLE[COLS][TABLE[1][( ( ( TABLE[7][1] ) ) )]] ) )][-dog * bar()]],Hodor)][COLS]) ) )){
	( ( foo(COLS,39 - --1 - rule(foo(COLS),( ( TABLE[TABLE[protect()][foo(-dog * mislead(-0.12 + Ygritte * Arya + 0.63,Sansa),Jon) * -1]][foo(y)] ) )),970.1 - ( betray() )) ) ) + -1;
	Sansa /= ROWS / destroy(-betray(bar(-76,-x),1,( mislead() )) / Sansa - mislead(),--92 * protect(Jon - ( -betray() ),-Stark - betray(--Ygritte,betray(mislead(( -foo(1) / rule() + Ygritte )) - ( ---890.08 ),COLS)) * -0.76,-69))
}
};
	---43
};
	Hodor
}
var Jon = Sansa
def foo(Jon,Hodor,Jon){
	if(ROWS){
	Jon += 680.2414 / TABLE[rule(TABLE[Sansa][-( COLS ) + destroy(TABLE[( -0.52 )][( -( -1 + -0.62 / COLS ) )])] + mislead(protect(-dog - ( ( Ygritte ) ) + -39)))][ROWS];
	if(bar(-38)){
	-0.36 + TABLE[COLS][mislead(0.34)] * betray(Ygritte / TABLE[-73][--Stark * rule(-660.35)]);
	dog /= ( Stark )
};
	Arya += 0.38
}
}
def TABLE[Jon][j] {
	if(-0.17){
	if(ROWS){
	dog *= -0.57;
	TABLE[bar()][y];
	if(-protect() + foo() * destroy(91)){
	if(-Stark){
	Stark;
	30.416;
	Stark *= --destroy(ROWS,-destroy(0.81,( -0.89 ) + ( ( -( -COLS ) ) )))
}
}
} else {
	if(-protect(-foo(-0.13),-COLS,rule(TABLE[1 + --1][61] * Sansa * 33))){
	Jon -= COLS - 1 - ROWS;
	--48
}
}
};
	if(63){
	if(( ( Hodor ) )){
	x += -mislead()
}
}
}
var Sansa = rule()
def rule(dog,Arya){
	if(mislead(ROWS)){
	if(-1){
	if(ROWS){
	if(destroy(COLS,dog)){
	foo(betray(mislead(),COLS,y),0.21 + Hodor);
	Arya *= destroy(( 0.94 ) * ( -280.729 ));
	if(TABLE[COLS / Hodor][--1 / --960.7] / 77){
	if(-( COLS )){

};
	mislead(mislead(COLS));
	if(COLS){
	Jon /= 180.2;
	if(( foo(ROWS - ( -Stark ),( 9 ),Sansa) + ( ( Stark ) ) ) / Arya){
	Stark += ROWS
} else {
	Arya
};
	if(Jon){
	Ygritte *= -( --0.85 + Jon );
	( -rule() );
	0.02
}
} else {
	ROWS;
	Sansa += ROWS
}
}
} else {
	if(foo()){
	Jon -= ( ( -10.2 / ( y / ( ROWS ) + 42 ) ) );
	protect()
} else {
	y -= ( -87 );
	y += ROWS
}
};
	if(Ygritte){
	if(Arya){
	Arya -= 0.98;
	if(-COLS){
	Ygritte -= foo();
	Jon /= bar(-ROWS,y)
}
} else {
	if(-( 64 ) * Sansa){
	if(-bar()){

} else {
	TABLE[dog * ( -( -1 ) )][( -bar(-0.45) )] - ROWS;
	-TABLE[--mislead() / -x / y][Hodor]
}
};
	ROWS
};
	if(Stark){
	( 0.28 )
}
} else {

}
};
	Ygritte -= COLS
};
	Jon += Hodor
};
	-( x ) / COLS * -1 - ( COLS )
}
var dog = Ygritte
def bar(Sansa,Ygritte){
	y *= ROWS
}
var Arya = destroy()
def rule(){
	Stark += betray(TABLE[-430.59][Jon]);
	y *= ( bar(rule(-530.2213) + ( TABLE[-0.47][Arya] ),( COLS ),dog) + COLS / -( y ) / foo() )
}
def betray(dog,Hodor){
	Jon -= -1;
	--( COLS )
}
var Hodor = mislead()
def destroy(Arya){

}
def TABLE[COLS * ROWS][k] {

}
def mislead(y,y){
	Jon;
	if(( COLS )){
	y -= mislead(0.59);
	-1
} else {
	x *= Stark;
	dog -= protect(( ROWS ))
}
}
var Stark = -0.41
var Hodor = ROWS
def rule(dog,Jon,Stark){
	dog *= dog;
	if(ROWS){
	foo(--74,-60.2 * -ROWS,ROWS + -( --25 ))
} else {
	if(COLS){
	x -= COLS
};
	ROWS
}
}
def TABLE[Arya][i] {
	if(( Stark )){
	( Jon ) + -foo(( -TABLE[Sansa][( -1 ) / -1] ),rule(protect(-ROWS))) - rule(( COLS ),--0.68)
} else {

};
	Sansa *= 97;
	if(destroy()){
	if(betray(-destroy(( y ),-9,-foo(--1,-31 + protect(71,30 + TABLE[-ROWS + ( TABLE[-1][x] ) * -0.98][bar(1)] * -21 * destroy(destroy(-49,( ( bar() ) )))))))){
	if(( ROWS - destroy(-( COLS ),ROWS,Jon) - 71 )){
	Sansa
}
};
	destroy(x,TABLE[-42][-( COLS )],( bar(x) - Sansa ))
} else {
	if(foo(-Hodor * -( Arya ) - TABLE[Jon][TABLE[COLS / bar(destroy(Arya,( 36 )))][foo(-Stark,COLS,1 + ( COLS ) / -60 + TABLE[Sansa][0.39])]] - foo(49,( ( ROWS ) ) - -0.79),Hodor,Ygritte) + Jon){
	Sansa += protect(--90,foo(COLS + Sansa - 81,dog));
	Ygritte /= ( ROWS )
};
	Hodor
}
}
def mislead(Jon,Arya){
	dog -= 0.8;
	dog *= Stark
}
assert -( mislead(Ygritte,x + TABLE[-0.13][COLS],TABLE[mislead(Arya,( bar(TABLE[-Sansa][( -57 )],600.05 - ( ( COLS ) )) ),-0.55 - Stark)][Arya]) ) : "What do we say to the Lord of Death?"
assert dog : "Fear cuts deeper than swords."
def TABLE[90][j] {
	---ROWS + Ygritte
}
assert -1000.2 : "One can not simply parse himself"
assert -1 : "One can not simply parse himself"
def destroy(){
	if(( foo() ) + destroy(-0.9)){

} else {
	if(( ( -0.18 / ( ROWS ) ) )){

} else {
	betray();
	if(bar(ROWS) / -Hodor){

}
};
	if(( dog )){
	if(( -91 )){
	Ygritte /= protect(-1,betray(23,0.13)) - -690.77 + COLS;
	-ROWS
}
}
}
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Winter is coming"
var Jon = ( destroy(1 * -destroy(betray(COLS,Ygritte),Jon),Stark) )
var Stark = 87
assert ( destroy(Jon,x,-Arya - foo()) ) : "Winter is coming"
assert -0.75 * rule(1,Stark) * TABLE[( mislead(( mislead(-protect(destroy(--65,( ( ( destroy(ROWS) * --( foo(( ( -Arya ) )) * dog ) ) ) ) / Sansa),rule(( Sansa )),( ( TABLE[Stark][x] ) ))) )) )][protect(8,Ygritte) + Stark] : "What do we say to the Lord of Death?"
assert ( ( Hodor ) ) : "Nothing burns like the cold."
var Hodor = ( 0.08 )
assert -23 : "Winter is coming"
assert ( 0.03 ) : "Nothing burns like the cold."
def TABLE[( mislead(-0.06 + ROWS / ( Stark - ( -0.02 ) ),85,Hodor) )][i] {
	if(( -1 ) - mislead(( protect(ROWS) ),mislead(Stark,Sansa,x),TABLE[destroy(-0.26)][--150.614 * ( -78 )])){
	if(foo(TABLE[--( -0.99 )][betray(--x,33)])){

} else {

}
} else {
	if(( --15 )){

} else {
	if(COLS + 31){
	( ROWS )
};
	if(( ( dog ) + -0.57 - -( foo() ) / betray(ROWS,Arya,betray(( Sansa ),( -1 ))) )){
	TABLE[rule(46 * ROWS) * mislead(-Stark)][TABLE[-1][-protect()]];
	if(TABLE[Hodor][-COLS + TABLE[69][ROWS + -dog]]){
	-rule(-29 + 49)
} else {
	( destroy(-TABLE[( 62 )][Arya],TABLE[-Ygritte][Stark]) ) + betray(Hodor)
};
	COLS
}
};
	if(-protect(TABLE[( -84 / ROWS )][dog - -0.16],-0.48,COLS)){
	Ygritte /= destroy(COLS,foo(-foo(),-1,( Jon )) * rule(-Jon,protect(--rule(( y )),( 1 ) * 0.2 / Arya * ( -9 ),( foo(-betray(TABLE[( betray(TABLE[ROWS][protect()],( protect(ROWS) )) )][0.73 - Arya])) ) * Sansa / -x)))
};
	if(Stark){
	if(( -Jon )){
	( Stark )
};
	if(dog){

};
	Arya
} else {
	betray();
	if(-ROWS){
	if(-1){

} else {
	if(y){
	COLS;
	Arya
} else {
	Hodor += 300.5906 / Jon;
	dog /= COLS;
	ROWS
};
	Hodor;
	y -= rule()
};
	if(betray()){
	COLS
}
};
	Arya *= -410.3
}
}
}
var dog = -rule()
assert ROWS : "Fear cuts deeper than swords."
var Stark = 0.29
var y = Sansa
assert -0.53 + ---( ( 880.967 ) ) : "What do we say to the Lord of Death?"
def TABLE[foo(protect(-protect(betray(-mislead(bar(-90,destroy(-ROWS),betray(( mislead(-0.72,( -Stark )) ),dog - Sansa - -0.28 + ( -( COLS ) + -COLS / TABLE[Sansa * COLS - COLS * TABLE[destroy(COLS)][-1]][-mislead(destroy(rule(rule(),-15,--88),rule(--Jon * -ROWS,-190.9,320.51),-Ygritte - Stark),foo(protect(),Arya,Jon),330.006)] )) + -bar())) * -( x )),-foo()),TABLE[-1][( Hodor )] * ROWS - ---Jon / dog - x,TABLE[-dog][COLS]),--Ygritte)][k] {
	Ygritte += -( -x );
	Arya *= ( mislead(x,y,Ygritte / COLS) )
}
assert y : "Nothing burns like the cold."
def bar(Sansa,Hodor,x){
	Ygritte /= --y / --0.31
}
def TABLE[-bar(( ( -rule(-Stark,foo(Stark)) / 670.999 ) * TABLE[bar(( -COLS - bar(65,0.66) ),-17) * Arya / Ygritte / Ygritte][ROWS] ))][j] {
	if(Sansa){
	Jon -= -0.14;
	Jon += ( dog );
	-80
} else {

}
}
def TABLE[( ( mislead(( -340.3 ) + Sansa,--( TABLE[570.2172][Stark] )) ) )][k] {
	Ygritte + Sansa / 980.83
}
def rule(){
	if(( COLS )){
	if(-TABLE[Sansa][0.03]){
	dog /= COLS;
	if(570.403 - ( --0.19 - destroy(foo(COLS / Stark,Sansa,-1) / ROWS,--1) )){
	( ROWS );
	Ygritte += ROWS
} else {
	y + ROWS
}
} else {
	-TABLE[foo() * 650.489][-50.15] / betray(Ygritte,Stark - ROWS) * -TABLE[( Arya )][mislead(mislead(( ( ( 570.4 - -1 ) ) ),bar(COLS)) + ROWS,y,-TABLE[( -COLS )][1])];
	if(( bar(( 64 ),betray(TABLE[-TABLE[-7][-TABLE[--0.58][-( 0.25 )] + ( protect(-0.61,( ( rule(Ygritte / ( TABLE[COLS][COLS] ),-ROWS) ) ) - foo(destroy())) ) * ROWS] - TABLE[betray(COLS * foo(( COLS )))][ROWS]][betray(protect(protect(Arya,COLS),( ( TABLE[( 51 )][TABLE[ROWS][ROWS]] ) )) * ROWS)],--x,y)) )){
	Stark -= ( foo(Ygritte) );
	dog += bar(Arya,destroy(-( rule(COLS) ),dog,410.08));
	Jon -= -foo(COLS,bar(),y) + ( x )
} else {
	Hodor;
	y;
	if(ROWS){
	Arya;
	Stark *= destroy(( ( rule(( ( 80 ) ),foo() / x) ) ) + Hodor - -( ( protect() ) ),COLS * TABLE[Ygritte][-0.18]) - ( COLS )
} else {
	-0.94;
	Hodor;
	if(-( betray(--450.6) + rule(destroy()) * TABLE[-COLS][betray(TABLE[-0.54][-59],0.76 - Stark)] )){
	-1;
	foo(-64,( 1 ),mislead(-( dog )));
	Arya *= ( -dog )
}
}
}
}
}
}
def foo(Ygritte){
	Stark *= y
}
var Ygritte = -COLS
assert TABLE[dog][-0.38 - -0.69 - foo()] : "Nothing burns like the cold."
assert Jon : "Fear cuts deeper than swords."
def mislead(Hodor,Stark){
	dog += mislead(Sansa) - ( ( destroy(-protect(( ( -0.09 ) )),-( bar(foo() / betray(),-0.69) )) * COLS + --560.769 / ( -x ) ) )
}
assert Arya * ( ( --0.64 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	y /= ( ( ( -ROWS ) ) )
}
var Ygritte = destroy(-Jon,( -y ))
def TABLE[-Sansa / -( mislead(Stark) ) - ROWS][i] {
	y *= ( bar(61) - 820.788 );
	if(( ( 0.87 ) )){
	if(-0.61){
	-destroy(Sansa,( ( -0.67 ) ))
};
	ROWS
} else {
	--0.11;
	if(Ygritte){
	betray()
}
}
}
def TABLE[rule(85)][k] {
	( -1 ) + Arya;
	ROWS * --18
}
def TABLE[( TABLE[COLS][bar(Hodor)] / Arya )][k] {
	--( 0.39 );
	-bar(Sansa) / protect(-710.4 * -destroy(0.53,( ROWS ),0.72 - Arya + COLS),foo()) + ( -ROWS / -( 0.14 ) ) - destroy(-1)
}
var y = TABLE[--ROWS][-Arya] + ROWS
def rule(Ygritte){
	( bar(( foo(36,rule(Jon,destroy(-Stark),rule(ROWS)),Arya) ),-650.26) );
	( TABLE[-( 0.54 )][-mislead(0.37,-0.47)] )
}
def protect(){
	protect(-ROWS,-destroy(),-foo(-0.1) / dog / TABLE[Ygritte][TABLE[-1][( -ROWS )]])
}
var x = dog
assert TABLE[73 * --1][-Jon - -dog + Arya] : "Nothing burns like the cold."
var x = destroy(dog,( COLS ))
def TABLE[ROWS][i] {
	-COLS;
	Arya /= -( y ) * ( betray(-1,foo(( -0.4 ) / ( betray(( mislead(-( Stark ),COLS,6) ) / mislead(( -protect(destroy(bar(-1,-COLS),x),( Sansa )) / -0.54 )),y,COLS) ),1),( -92 )) )
}
def betray(x,Jon){
	Ygritte
}
def TABLE[( ROWS * mislead() )][j] {
	if(betray(TABLE[destroy(( destroy(( dog )) ),100.7,betray(( Arya )))][ROWS])){
	Hodor -= foo(COLS,-0.66,-Jon + -TABLE[( ROWS )][Jon]);
	if(0.28){
	-70;
	if(x){
	TABLE[---ROWS][-Stark + --430.13] - -Arya
} else {
	COLS * Stark * -( TABLE[Jon][-ROWS] * -0.66 - protect(( COLS ) - ( 680.97 ),TABLE[0.42][Stark]) )
};
	Stark *= -Stark
} else {
	if(TABLE[-1][x]){
	if(ROWS){
	( Stark )
};
	Ygritte *= ROWS
} else {
	destroy(Hodor,---49 * -240.72 - betray(Ygritte),( ( -0.45 ) * --360.73 ));
	Ygritte *= -COLS
}
}
};
	if(--0.61 - ( Jon ) * -Sansa){
	( mislead(Jon,0.03 / destroy(-TABLE[TABLE[-( --1 - Stark + -( rule(-( destroy(Stark,--38) ) * 0.6 * COLS) ) ) / protect(betray(protect(mislead(ROWS),Stark - ( 0.61 * -( ( ( TABLE[( destroy() )][betray(-1,( -mislead(( mislead(TABLE[( 0.28 ) + TABLE[y][bar(ROWS)]][TABLE[bar(rule(ROWS,-( -38 )),Ygritte)][--destroy(ROWS) - x / -rule(-69)]],rule(( ROWS )) - 100.597 / COLS) ) - ( destroy(betray(x),-protect(1,Jon,( -TABLE[-1][-0.6] + y ))) )) ))] ) ) ) + Stark + ROWS ),-( ( Stark ) ))))][Arya + ( ( foo(x * y,--COLS + Arya) ) ) - COLS * Sansa]][0.38],-Arya / ( 78 ),bar(--3 + -( Jon ),--( ( -0.45 + COLS - ( COLS ) / Ygritte ) )))) );
	-( Arya )
}
}
var Jon = -mislead(61)
assert COLS : "Fear cuts deeper than swords."
assert COLS : "What do we say to the Lord of Death?"
var y = -rule()
def rule(Hodor){
	Hodor += ROWS
}
def TABLE[42][k] {
	Ygritte;
	Jon;
	Hodor += x
}
var Hodor = --0.28
def foo(dog,Hodor,dog){

}
def protect(Arya,Sansa){
	if(ROWS){
	betray(ROWS);
	dog /= TABLE[TABLE[dog * -ROWS + -1 / COLS * ( y + ( bar(betray(-betray(Jon * ( ROWS )),bar(-foo(),( y ) - --Ygritte * TABLE[--0.97][TABLE[-76][0.96]])) + ROWS,betray(--TABLE[COLS][-1] - destroy() / destroy(( ( -ROWS ) ),40 - Hodor,ROWS),-0.26,Hodor),betray(0.12) - -Stark) ) ) * TABLE[rule()][-betray(--0.41 - ( Ygritte ),-( 580.54 ))] - 63][protect(TABLE[-0.69][foo(-Ygritte,( --26 ))])]][( COLS )];
	if(-230.6604 * TABLE[( mislead(foo(COLS,Stark),-betray(Hodor)) )][--COLS] / Hodor){
	Sansa += bar(betray(----78 / Ygritte,( Sansa ) - Hodor),( dog ))
}
} else {
	Sansa -= destroy(dog,Jon)
}
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( betray(-11) )][k] {
	if(-TABLE[COLS][COLS + ( -8 )]){

};
	680.67;
	if(betray(destroy(TABLE[-destroy(( mislead(-0.73 * --( Sansa )) ),TABLE[Arya][( Hodor ) - betray(( -COLS ),( -68 ) - -COLS * destroy(( COLS ),Arya,betray(-63,TABLE[TABLE[-850.239][( TABLE[COLS][( bar(--89,-betray(TABLE[y][Jon])) )] )]][COLS - TABLE[-1][TABLE[foo(Jon,( TABLE[-1][-74] ))][Hodor]]],-( ( ROWS ) ) * -160.9004)))])][ROWS],rule()))){
	if(ROWS){
	if(( -protect(( -bar(Stark,-0.2) )) )){
	Sansa /= Stark;
	-0.74
};
	if(foo(( -0.22 ))){
	-destroy(-0.24,( Sansa ),TABLE[-mislead(COLS,( destroy(Stark) ))][-( Sansa )])
};
	if(Arya){
	( COLS ) / Sansa;
	-0.72
} else {
	Ygritte /= -1;
	Arya *= y
}
} else {
	TABLE[Ygritte - -66][TABLE[COLS][Sansa]] * ( -ROWS );
	if(-0.97 / -0.86 * ( --0.06 + TABLE[-1][( COLS )] - Sansa * ( ( Hodor ) ) )){

};
	if(TABLE[rule(-protect(( TABLE[Arya][destroy(0.44,( protect(-( ( -TABLE[( TABLE[y - 64][ROWS] ) / ---57][mislead(( bar(1,rule()) ))] ) ) * TABLE[--1][protect(rule(( TABLE[betray(-Arya,( 740.8146 ))][0.04] - mislead(Sansa) )))] + rule(),---0.09) ))] )) / foo(x,TABLE[-protect(y)][( ( -Ygritte ) )])) * --0.01][610.588]){
	x += x
}
};
	Ygritte *= x - Ygritte;
	if(( ( 0.64 ) ) * protect(0.09,TABLE[( -0.4 )][( ( foo(x,COLS) ) ) / ( -y )] / ( destroy(( y )) ))){

} else {
	dog;
	( Ygritte )
}
}
}
assert 0.71 : "Fear cuts deeper than swords."
assert ( rule(COLS,1 / COLS) ) : "Fear cuts deeper than swords."
def TABLE[-TABLE[-1 / destroy(--( ( ROWS ) / ( 0.94 / TABLE[TABLE[-0.3][COLS]][rule() + foo(-y,( 14 ))] ) * -Hodor - protect(Sansa,-1,( Arya )) ) * 370.293)][-43]][k] {
	Hodor *= -0.61;
	dog -= betray(TABLE[COLS][Stark],( TABLE[75][COLS] ) / Arya,-y * ( ( COLS ) ))
}
assert COLS : "Fear cuts deeper than swords."
var y = rule() + ( TABLE[-foo(foo(( Hodor * Arya ),bar(--1),COLS))][-28] )
var y = -66
def TABLE[protect(( 170.7 ),-foo(Arya))][k] {
	dog -= ( destroy(ROWS) )
}
assert ROWS : "Nothing burns like the cold."
def TABLE[foo(ROWS * Sansa)][i] {
	-( ( Jon ) ) - -320.036
}
assert 0.96 : "Nothing burns like the cold."
def bar(dog,Stark,dog){
	Ygritte += betray(-29);
	if(y){
	0.91;
	-Sansa
}
}
assert ( Arya ) : "Fear cuts deeper than swords."
assert TABLE[( ( -3 - mislead() / protect(ROWS + destroy(),COLS) ) ) * bar(mislead()) - foo(y)][-98] : "One can not simply parse himself"
var Hodor = -360.481
def mislead(Sansa){
	destroy(rule(Ygritte,10 + ( x ))) / 0.73
}
def bar(Stark,Stark){
	if(y){
	dog -= Arya;
	dog -= foo(-1,( Jon - -y + dog * -0.32 ) / x)
};
	( TABLE[530.0473][-( ( ( Ygritte ) ) - COLS / dog / ( Ygritte ) ) / -foo(--80)] )
}
var Sansa = ROWS + 37
assert ( Arya ) : "Fear cuts deeper than swords."
var Ygritte = -10
var y = ---COLS
def rule(Jon){
	if(destroy()){
	-71;
	if(--1){
	if(COLS){
	rule() + ( --( ( Hodor ) ) )
}
};
	if(Arya / ( -( Sansa ) ) + -Sansa + ROWS){
	( -( 95 / -y ) )
} else {
	y -= TABLE[-( x )][Hodor]
}
} else {

};
	if(-ROWS - -( -28 )){
	if(mislead(Sansa,-0.88) + Jon){
	96;
	if(-390.84){
	430.861;
	if(13 / ---mislead(0.67 + destroy(Arya,ROWS,-ROWS),( foo(-( ( -rule(TABLE[TABLE[COLS][-TABLE[betray(COLS,-0.27 + ( foo(protect(-( ROWS )),( -bar() - foo(y,dog + ( ( ( -( ( ROWS ) ) ) ) )) / ( --0.14 ) )) ),rule(1))][( ( COLS ) )]]][-68],TABLE[bar(11,dog * -protect(-74) - 1 / ROWS / rule(ROWS,destroy(y,12,x + 74),-0.39 - ( TABLE[--57 + Stark][ROWS] ) * mislead(( -700.37 ),COLS)) / COLS * ( destroy(-59,( bar(-0.75,( Jon - ( TABLE[protect(TABLE[( -53 )][-61],( ( dog ) / Arya ),( Sansa ) + COLS)][TABLE[-TABLE[bar(55)][ROWS - 1]][y * Jon]] ) ),bar(1)) )) ) / -TABLE[( -TABLE[ROWS][ROWS] )][COLS] + ROWS)][x]) ) * Hodor ) + -1,Arya) )) - -490.4469 / -36){
	-1;
	Ygritte *= 0.96
};
	if(( protect() )){
	if(81){

};
	rule(protect(-bar() / Hodor));
	if(-0.84){
	Hodor /= -( ( protect(y,x) ) );
	-19 / betray()
}
} else {
	if(-1){
	if(Sansa){
	Sansa /= COLS;
	if(( ( rule(foo(( ( ( ( Hodor ) ) ) ),( -COLS ) + ( 1 ),betray(destroy()) * Ygritte)) ) )){
	--x / rule(( protect(dog) )) + protect(--( ( 37 + -0.61 + -1 - COLS ) ) - mislead(y) * ( -y ));
	if(COLS){
	-Sansa
}
};
	if(ROWS){
	y -= -ROWS
} else {
	( bar(-480.9539 / 0.02) )
}
} else {
	Sansa *= ( destroy(ROWS) )
}
} else {
	Stark += TABLE[dog][Stark]
};
	-y;
	if(ROWS){
	dog *= Jon;
	Stark += -0.1
} else {
	Arya += ( Hodor );
	if(Ygritte){

} else {
	if(-COLS){
	y -= -70.554
};
	TABLE[( TABLE[Sansa][( -511 )] )][protect(-0.84,foo(--110.3 - TABLE[( rule() )][y] - -Sansa / 210.3))]
}
}
}
} else {
	if(-0.26){
	foo(( ROWS ) / ( ( Hodor ) )) + destroy();
	( ( destroy(bar(x,dog,( -destroy() )),( ( -97 + protect(destroy(( COLS )) + -0.82) + protect(TABLE[dog][( COLS )]) ) )) ) );
	if(mislead(ROWS,( foo(( --TABLE[( x ) - ---1 * y - 450.085][-0.58] - ( ( Jon ) ) ),( 82 )) - Hodor + ( Sansa ) * mislead() )) / -rule(0.75 / protect(),( foo(--protect(mislead(-y,Jon),ROWS)) - -TABLE[-1][( mislead(foo(destroy(( Hodor )),-69) - ( -foo(-46,Stark) ),( -0.68 )) / ( mislead(( ( -( -dog ) ) )) + ( Stark ) / --1 + -( -0.19 ) ) )] ))){
	-ROWS
} else {
	if(0.59){
	y *= ( ROWS - -340.217 )
} else {
	-rule(-Jon);
	Hodor += ( ( ( ( ( protect() ) ) ) ) );
	if(0.35){
	TABLE[TABLE[-COLS][COLS]][-( Jon )]
}
};
	x += COLS
}
} else {
	dog += -Sansa * -0.65;
	Ygritte += COLS * foo(-Stark,( COLS ) / 0.07)
};
	Jon /= ( COLS )
};
	Arya *= ( destroy() )
} else {
	if(-( ( x ) / -0.95 )){
	Sansa -= -COLS
}
};
	Stark += -96 / betray()
};
	if(0.79){
	if(bar(-ROWS,-0.79,( 290.665 / ( TABLE[x][ROWS - ( Sansa )] ) ))){
	dog += ( -protect() );
	foo(-mislead(Hodor),-mislead(protect(( mislead(betray(( 12 / ROWS ))) )),( COLS )))
} else {
	-protect(34,( y * 55 ))
};
	Arya += bar(( 10 * ( mislead(TABLE[Hodor][COLS],( TABLE[( -21 )][protect(( Jon ))] )) ) * foo(bar() - ROWS,Sansa) ) / ( mislead(COLS,500.2) ),250.9849,( rule(-750.285 - Arya / ( -Hodor ) * foo(Ygritte) - ( -1 ) - ( -dog ),--destroy(betray(betray(dog * 0.65,1),( ( 61 ) )),-rule(destroy(-protect(-0.15,( TABLE[-TABLE[foo(ROWS + destroy(ROWS) * ( foo() ),-1,0.33)][-Stark + Stark]][0.98] + protect(-0.41,Jon,--( destroy(Hodor) ) + Sansa + ( ROWS - Hodor * ( -660.939 ) ) / --COLS - TABLE[destroy(-1,( Sansa ))][ROWS]) ),( TABLE[foo(betray(( ROWS )),COLS)][82] )),rule(),( -0.32 ))),COLS),Hodor) ));
	x += Hodor
} else {

}
}
def TABLE[( TABLE[0.38][Hodor] / ( Sansa ) )][i] {

}
def rule(Arya,Ygritte){
	Hodor *= dog;
	( -betray(--10.07 - foo(TABLE[dog][-( dog )],-( ( ( destroy(y,mislead(dog)) ) ) ) - -COLS,protect())) * bar(-1) );
	dog += -( rule(mislead(),-0.71) ) * y * ( -87 )
}
def TABLE[TABLE[COLS][destroy(Ygritte / -Sansa,-( protect(Sansa,-betray(ROWS - betray(( 0.44 )) + Arya / TABLE[TABLE[rule(-50.114 * -Hodor - ( ( ( protect() ) ) ))][COLS + COLS]][-1])) / ROWS ))]][i] {
	if(--( ( -98 ) + --COLS )){
	if(780.01){
	Ygritte += -0.05
};
	rule(-x,TABLE[COLS + TABLE[Hodor][ROWS]][mislead()])
} else {
	if(( x )){
	if(-mislead(59 - betray(0.37 + Hodor)) - ( ROWS )){
	if(-100.77){

}
};
	dog += Ygritte;
	if(rule(-ROWS)){

} else {
	Ygritte -= 1
}
} else {
	if(-1){
	if(Sansa){
	Ygritte += Stark + 630.19
};
	Jon -= betray(COLS,-0.42 - x)
};
	if(-Stark + -( --( Ygritte ) )){
	if(-bar(rule(( -14 ))) + bar()){
	TABLE[mislead(( -0.38 ) / 4 + Sansa,-33)][( 81 )]
};
	betray(( TABLE[COLS][Hodor + Sansa] ))
};
	TABLE[-COLS][300.691]
}
};
	-21
}
def betray(Ygritte,Arya){

}
assert 68 : "Fear cuts deeper than swords."
assert ( ( -( mislead(Sansa) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -( x )
var Stark = betray(-x,18,-Ygritte * ( -( ROWS ) ) * protect(-protect(Arya)))
var Hodor = ( ( betray(TABLE[COLS - ROWS][Sansa],dog) ) )
assert Ygritte : "What do we say to the Lord of Death?"
var Sansa = 1
def TABLE[( -48 ) / ROWS][j] {

}
var Ygritte = ( 89 )
var Hodor = TABLE[ROWS][COLS]
assert ROWS : "Winter is coming"
var y = -y
assert bar(TABLE[-( protect(dog,Sansa) )][x] * -TABLE[-x][betray(TABLE[-0.08][COLS],-87,-protect(--8 / 890.7)) + 1],TABLE[Sansa][-COLS + Hodor],bar(( Arya ),COLS) + ( TABLE[-0.08][Arya] )) : "One can not simply parse himself"
def protect(y){

}
def bar(Ygritte,Sansa,Ygritte){
	if(--( 310.813 - -0.69 )){

} else {
	if(Sansa){
	if(rule(rule(rule(Stark,35) * ( -1 ),-COLS + bar() / TABLE[y][destroy(( ( ( Sansa ) ) ))] + -destroy(y,--0.81 * Stark,-ROWS) * ROWS))){
	if(1){
	TABLE[( ( -1 ) )][--( ROWS * mislead(Arya) )];
	if(Ygritte){
	if(ROWS){

};
	if(x){
	COLS;
	Arya /= bar(-mislead(Hodor - destroy(( foo(1) )),x),dog);
	if(foo(destroy(COLS,dog))){
	protect(rule())
}
} else {
	Stark -= TABLE[-( 53 )][-0.23] - ROWS - COLS + y / ( COLS ) + -rule(ROWS + dog) * bar(COLS,dog,-0.26) * -40.257;
	Arya *= ( COLS );
	if(y){
	if(betray(foo(( bar(-( COLS ),( -0.53 ),( TABLE[-631][bar(foo(( ( -bar(y,COLS,rule(( -74 + -Ygritte + mislead(-0.05,COLS * ( bar(--83 * ( TABLE[-84][x] ),1) / -y )) * 1 * ( -rule(( -0.93 ),-( mislead(-( COLS )) )) ) ),TABLE[ROWS][-1 - bar() / 0.24])) / ROWS ) )),-foo(-( Arya ),bar(910.97,( COLS ) / -TABLE[foo()][-88])) * ( betray(-COLS / ( 28 / COLS - -82 ),--x + ( TABLE[( y ) + ( ROWS )][ROWS] / -protect(COLS,( protect(-87,Arya) ),( Ygritte )) + bar() ),Stark) ),( Hodor ))] )) - -x ),-Hodor))){

} else {
	rule();
	if(---rule(76)){
	Jon -= ROWS;
	if(mislead(x)){
	if(Ygritte){
	Hodor += -0.06;
	Ygritte
} else {

}
};
	foo()
} else {
	-12;
	if(ROWS){
	if(destroy(-29 - ---Stark * COLS / Stark)){
	0.11 + Stark - --55 - TABLE[-30.408][-870.35]
}
};
	ROWS
}
};
	if(Sansa){
	mislead(foo(bar(-x,y),( --4 ) * betray(Jon),( 190.18 )),--( dog ),-0.09 + -Sansa);
	if(ROWS){
	0.17;
	-Hodor;
	( ROWS )
}
}
}
};
	TABLE[Sansa][( -betray(ROWS) / foo(0.93) )]
}
};
	if(bar(rule(x,0.97))){
	x /= mislead(( -Stark ),TABLE[-90.5489][( TABLE[-1 * protect(-250.54,Hodor,x)][destroy(( 880.79 ),-mislead(( foo(--0.21 - ROWS,( COLS )) )))] ) - destroy(COLS,-COLS)]);
	if(rule(bar(bar(0.55,TABLE[foo(0.22) * ( Stark )][( ( protect() + Hodor * -Sansa / dog ) ) - foo(( ( ( ( -850.58 ) * ( COLS / betray(Hodor,-570.7,Ygritte) ) / -33 + Sansa ) * TABLE[COLS][rule(protect(73,-TABLE[37][930.411],( protect() )),Jon,1)] ) ))],COLS) / 80.38,-destroy(--0.21 - -Sansa,Sansa,-0.21),-33),-( COLS ) * -0.18 - -foo(Stark),( destroy() ))){
	protect(( COLS ) / ( x ))
};
	y *= protect(-( Stark ))
}
}
} else {
	y /= ROWS;
	( COLS + ( ( ROWS + COLS ) ) );
	Stark *= ( -( ( -0.23 ) ) )
};
	Jon += TABLE[( -foo(Arya - Hodor + 250.51,-60,20.39) )][mislead()]
}
}
var Sansa = TABLE[-0.72][-protect(COLS)]
def bar(Ygritte,x){
	( 8 )
}
assert COLS : "Fear cuts deeper than swords."
var dog = betray(-betray(-ROWS,protect(COLS,-0.64,ROWS),( 1 )))
assert Ygritte * ( betray() ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -TABLE[destroy(betray(---foo(destroy(Arya,TABLE[-0.72][foo(TABLE[destroy(ROWS)][( -dog + dog ) * -Arya - ( -TABLE[ROWS * -ROWS][--0.9] )],-150.41,COLS)],-0.18)),-0.51),-TABLE[foo(8,--Ygritte)][( mislead(COLS - ( ( -betray(destroy(COLS,-destroy(ROWS,( -640.9 ) - -betray() / destroy(protect(( betray() * Ygritte ),COLS))))) ) ),rule(-ROWS)) )])][COLS]
assert 35 : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	Jon *= -ROWS
}
def TABLE[( Jon )][k] {

}
def foo(Stark,dog){

}
var dog = 720.69
def mislead(Jon){
	if(dog){
	-ROWS - ROWS;
	if(( -98 )){
	x += COLS
} else {
	Stark
}
}
}
var y = COLS * ( 75 ) * ( -Ygritte )
def protect(Jon){
	if(protect(dog,( ROWS ))){
	if(( -mislead(-x) + destroy(-protect() / TABLE[Hodor - 72 + ( ( -1 ) ) - -betray(( 270.163 / -0.26 ),( ( -1 ) ),( bar(betray(foo(foo(( -16 )),Ygritte + -Sansa)),( y / -0.26 - rule(dog,Stark) )) ))][y] * -84,-580.38,destroy()) )){
	( 48 );
	Jon -= ( TABLE[Hodor][ROWS] ) + foo(destroy(Stark,y),protect(( ( 73 ) ) / -0.48,foo(mislead(( ROWS ),( 1 + TABLE[0.64][( 0.25 )] ),-0.57),( bar(destroy()) * Stark ) - TABLE[520.8664][Jon])))
};
	x *= COLS;
	if(-( 0.22 )){

} else {
	dog -= -rule(( -( COLS ) - x ) * 1 / dog,COLS);
	Hodor -= ( ( betray(mislead(-ROWS) + Ygritte,x,( dog )) ) )
}
} else {

}
}
assert TABLE[29][y] : "One can not simply parse himself"
assert 710.6 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -foo()
assert COLS : "Nothing burns like the cold."
assert foo(1) * -0.73 - -( ROWS ) : "One can not simply parse himself"
def foo(Hodor,x,Jon){
	if(Stark){

} else {
	Arya *= y;
	foo() / -46;
	-Arya
};
	bar(betray(-( -ROWS )) + ( ( ROWS ) ))
}
def TABLE[bar(-0.74,-y,Sansa)][j] {
	Ygritte += ( -880.467 );
	if(COLS + -86){
	if(destroy(COLS,y)){
	y -= y + rule(ROWS,-Arya - ( ( destroy() ) - -890.813 + Jon + foo(foo(ROWS,( -1 ))) ));
	-0.71
};
	if(TABLE[-88][TABLE[Hodor][dog]]){
	y /= ---( COLS ) - betray(-( -1 / Stark + 0.9 ));
	if(COLS + 16){
	Arya -= destroy(-800.2)
};
	protect(--( -protect(--ROWS,COLS / -12 * --TABLE[( -( ( -dog ) ) - dog ) + ---57][destroy()] * COLS,betray(mislead(TABLE[TABLE[mislead(Hodor,mislead())][( Arya )]][( ( ( -47 ) ) )] + COLS / ROWS / TABLE[dog][( COLS )],betray(destroy(( ( betray(Ygritte,ROWS * destroy(Jon,y) * -Sansa + -75 * ( ---Arya ) / -TABLE[ROWS][--Sansa / -890.972 / -( TABLE[Arya][( 0.06 )] )]) ) ),Ygritte - rule(87 * Stark - -0.13) + y,( x + ROWS / COLS )) / Ygritte * ( Arya ) - ( mislead(bar(--1,39)) ),Jon),ROWS),bar(ROWS,( ( dog + ROWS / protect(mislead(-betray(TABLE[700.9282][TABLE[( COLS * betray(( ( -destroy() ) )) )][89 - -Jon + Jon]],-foo(( COLS ))),Ygritte)) ) ) * ( rule(foo(72),( TABLE[( ( COLS ) + rule() )][( protect(( Jon )) )] - 1 )) / Stark ),protect(dog,( TABLE[37][( y * 0.83 ) + -bar(rule() + -44 + -betray(0.51,TABLE[x][ROWS] + Ygritte,43) - --9 - -94 - -( TABLE[-TABLE[Ygritte + ( COLS )][( -0.59 )]][COLS] ),50,TABLE[-ROWS - --TABLE[bar(( --( -69 ) ))][-( -1 )] + -0.23 - ( Jon ) - Arya][destroy(Jon)])] ))),Arya) - ( -TABLE[rule(Arya,( Arya ))][( bar(-y) )] )) ),-bar(( y ) / COLS,( Ygritte * ( 7 ) ),x))
}
} else {
	if(destroy() / x){
	if(0){
	if(destroy(( COLS ),0.79 + -0.71 / ( Jon ))){
	Hodor *= betray(destroy(-( mislead(Ygritte,Arya,-0.3) )))
} else {
	x += Ygritte
}
}
};
	ROWS;
	Arya * -0.68
}
}
assert bar(-TABLE[ROWS][y - betray(x,-1)],Jon * -Hodor,dog) / ( -1 ) : "One can not simply parse himself"
def betray(y){

}
assert 560.569 : "Winter is coming"
def TABLE[COLS][k] {
	x *= ( ROWS );
	y += rule(( ( TABLE[bar(Stark * rule(foo(-Hodor,( -Sansa ) + mislead(TABLE[ROWS][( --( --46 ) + COLS - -60.733 ) / Stark + -Hodor / ( 88 )],-78),rule()),950.441,destroy(COLS,ROWS)),betray(TABLE[TABLE[rule(rule(53,Hodor,--y),( betray(TABLE[-( ROWS )][( Ygritte ) + ( 63 )],( ( foo(ROWS,mislead(-( -0.58 ),mislead(rule(-69,( --Stark * y )),bar(mislead(( ( -COLS ) + mislead(0.78) ),( ( ROWS / ( TABLE[TABLE[--foo()][( betray() )]][TABLE[-Ygritte][ROWS]] ) ) )),-( -( Jon ) ),bar(Hodor,390.8,foo(TABLE[( betray(Jon) )][x]))),-100.73),890.519)) ) )) ))][ROWS]][TABLE[betray()][( bar(y,Sansa) )]],COLS))][betray(( ( ( ( foo(-( Ygritte - ( -TABLE[mislead(( Stark ),Sansa)][-0.47] ) ) - Hodor) ) ) * COLS ) ))] ) ),( x ),TABLE[dog][Jon] + 26)
}
assert rule(-22) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-mislead(ROWS) + ( foo(betray(( -y / ROWS ),-53)) ),ROWS,( dog )) / Jon : "Winter is coming"
assert -0.48 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( -93 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-550.91][i] {
	Arya += -1;
	-destroy(mislead(TABLE[ROWS][-TABLE[-1 / -TABLE[( rule(-0.96 * Hodor,410.63) )][ROWS]][destroy(Stark)] * -700.704]) / ( ( 0.11 ) ));
	if(( 69 )){
	Arya *= bar(-destroy(( -0.33 - ROWS ) / 0.55 + -TABLE[( Jon )][betray(mislead(ROWS,bar(Jon / destroy(-1),( TABLE[protect(-TABLE[Arya][0.72] * rule(-88,( foo(Hodor,Hodor,-16) ),-Arya) * -210.374,betray(COLS,ROWS - Jon))][--( ( COLS ) ) - -TABLE[-foo(--bar())][-0.88] - ( Hodor )] )),78),--13 * 1,Ygritte)] * ( --bar(ROWS + ( Ygritte * Ygritte )) ),Hodor + --COLS));
	if(( ( betray(Ygritte) ) )){
	Arya -= -dog
}
}
}
assert 1 : "What do we say to the Lord of Death?"
def TABLE[Hodor][j] {

}
assert -betray(0.46 * -Hodor,-( 7 ),( betray() )) : "Nothing burns like the cold."
var dog = x
var Jon = TABLE[Stark][-mislead(27)]
def destroy(Jon,dog,Ygritte){
	( COLS )
}
def TABLE[( COLS )][i] {
	Stark *= 0.65;
	if(Ygritte){
	Stark /= ( --890.426 );
	if(betray(ROWS)){
	Ygritte - mislead(COLS,TABLE[ROWS][protect(Hodor,bar()) * foo()] * ( x ))
};
	-x
} else {
	Jon += -( ( -7 ) ) / mislead(( --Jon ),57,destroy(protect(),1)) * ( bar(-1) )
}
}
def foo(x,x,Ygritte){
	Hodor /= bar(y,0.27,dog - foo(TABLE[-Jon][Arya],82,TABLE[-6][20]));
	ROWS;
	-92
}
var Ygritte = 0.5
def protect(dog,dog){
	( ( -0.49 ) )
}
var Ygritte = TABLE[-81][bar() - COLS / y]
var Hodor = ( TABLE[Sansa][( -( COLS ) )] - Ygritte / ( -0.55 ) )
def betray(){

}
assert --rule(( ( ( dog ) ) ) / -0.33,COLS) / -1 : "Fear cuts deeper than swords."
def mislead(){
	-( COLS )
}
def TABLE[( -990.426 )][k] {
	if(( 50 - Jon )){
	foo(x / Sansa)
} else {

}
}
def bar(dog){
	if(-betray() - ( ROWS ) - TABLE[ROWS][20] / Stark / -TABLE[( 580.932 )][Arya] - rule(foo() + mislead(-0.38),-0.16,-betray(( COLS ))) / mislead()){
	---38;
	Jon += rule(TABLE[ROWS][dog - bar() * Stark],-490.294);
	dog /= 0.78
};
	if(Sansa){
	if(Hodor){
	( ( ( ( -rule(rule(0.6)) / Hodor * -( ROWS ) ) ) ) )
};
	( 480.5 )
} else {
	dog - ( ( foo() ) );
	Ygritte
}
}
def TABLE[ROWS / destroy(destroy(dog,COLS,betray(y,Sansa)))][j] {
	Stark;
	if(Arya){
	Hodor /= -Arya
};
	if(Stark){
	( -betray(1) );
	dog *= --betray(--Ygritte,destroy()) / -Sansa / ROWS * COLS;
	if(( Ygritte )){

} else {
	Hodor *= ( Arya );
	-COLS
}
}
}
var Hodor = -rule(-400.01,Jon)
def betray(){
	Hodor += -97;
	if(TABLE[destroy(( ( y ) * foo(21 * foo(mislead(-1,--( 1 ) - ( TABLE[4][ROWS] )),-Jon / 95 - Ygritte),( ( TABLE[x][-rule()] + -1 * bar(bar(Hodor / COLS,-bar(Stark,ROWS - ( bar(COLS - Sansa - bar(-dog)) ),x)),mislead(TABLE[--COLS][destroy(( ( COLS ) ) * TABLE[dog][-89] - ( -betray(protect(COLS),610.239) ),-Sansa / ( -99 )) * -74])) ) )) ),Sansa / dog)][mislead(COLS)]){
	if(-rule(( ( -( 1 ) ) )) - protect(-y,-1 - -0.92) * -bar() - 35 * -( TABLE[( COLS ) - Hodor][Hodor + -( Stark ) / ( COLS )] )){
	Ygritte -= Jon
};
	Sansa *= COLS / Stark;
	if(ROWS * -protect(( Ygritte ),-Jon / COLS,dog)){
	if(Arya){

} else {
	if(-Arya){
	Stark -= -betray() - bar(dog,destroy(( -0.16 - bar() ),COLS,x),Ygritte) / COLS
};
	Jon += --0.24;
	destroy(( -Jon ) - ROWS)
}
} else {
	if(ROWS){
	if(( -480.8428 )){
	Ygritte;
	x += Sansa * ROWS;
	( Hodor )
}
}
}
}
}
var dog = COLS * destroy(1)
assert --Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ( -( -bar(-1) ) ) / COLS + --y * dog + foo(ROWS,---1) * -90
assert mislead(( ( 0.15 ) ),( ROWS - COLS / -30.3 )) : "Winter is coming"
def betray(y,Stark,x){

}
def TABLE[-COLS - --( ( 0.78 ) )][k] {
	Arya += Stark;
	if(--0.53){
	Jon /= -Jon;
	if(Hodor){
	Jon /= Arya;
	dog += 0.1
} else {

}
} else {
	TABLE[1][rule(( Arya ),betray(ROWS))] / -0.67;
	Sansa += rule(-( 0.91 ),Stark / Arya)
};
	if(ROWS){
	if(betray(protect(-41))){
	Arya *= TABLE[Arya][-0.96 - Jon * Arya - -( dog )]
} else {
	60.87;
	dog *= destroy();
	x *= -Arya
};
	if(Arya){
	if(Jon){
	y -= ( ROWS )
} else {
	-1;
	dog;
	y -= -( betray(-protect(Sansa,Hodor),-490.2321) )
};
	-56
};
	ROWS
} else {
	y /= -0.25 / Stark - -1;
	COLS
}
}
var Hodor = 20
assert 190.981 : "Fear cuts deeper than swords."
def TABLE[0.85][j] {
	if(mislead(0.3 - Sansa,COLS,-26)){
	if(Jon){
	if(-Stark){
	Arya / 0.98 + ( betray(y,foo(COLS,38)) ) * -38 - 40
} else {
	if(( --700.78 )){
	Hodor *= destroy(-( -1 ),x + protect());
	Arya *= destroy(-1) / x;
	if(-0.18){
	Ygritte /= -8
} else {
	if(TABLE[-700.029 / ( Stark )][COLS]){

}
}
} else {
	if(650.5953 / TABLE[TABLE[( ROWS )][COLS] / -80.102][( -0.74 )]){
	Stark += -940.76;
	if(620.47){
	Sansa *= ( ( rule(COLS) ) );
	Jon -= rule(Hodor,( -y + -bar(bar(( betray(-protect(( -COLS ),-61),Sansa) ),( ( -( ROWS ) ) )),( COLS )) / ( ( -protect(-( rule(ROWS) )) ) * betray(-0.83) ) + -350.5 ))
}
};
	if(( COLS )){

}
};
	if(( dog )){
	y *= ROWS
};
	if(( -Arya )){
	y *= mislead(( --2 + ( Jon ) )) * -TABLE[99][-( ( rule(Jon,ROWS) ) ) - mislead(ROWS) + betray(-0.15)]
}
};
	if(Ygritte){
	if(COLS){
	Hodor
} else {

};
	if(ROWS){
	if(protect(-1,--20.45,-Arya * mislead(rule(( Stark )),--27) + betray(-( -Jon - 0.19 * -Jon - -81 ),Ygritte))){
	0.84
} else {
	Stark *= Ygritte;
	( -Ygritte ) * ( ROWS );
	y *= y
};
	dog += mislead(rule(( 64 ))) + Ygritte + destroy(foo(ROWS,0),ROWS,protect(( --53 ))) + -1;
	Ygritte *= -92
} else {
	Stark
}
};
	if(COLS){
	-0.56;
	Stark /= -bar(--0.87);
	if(( --( x ) )){
	COLS
} else {
	if(-1){

} else {
	if(0.3 / ( -64 ) + Stark){
	( Arya - 0.09 );
	if(--( TABLE[-25 - Arya][( ( Jon ) )] / -( -Jon / --0.74 ) / ----24 ) + COLS){
	mislead(dog,( ( 96 / -( TABLE[( y )][TABLE[( ( rule(-( COLS ),-Jon,dog + 0) ) )][( mislead(y,Hodor,( Jon ) - rule(betray(dog,-x - -mislead(-650.89 * -0.78,foo(Stark),COLS),--90) * ---( Hodor ),bar(ROWS),( ROWS ))) )]] ) ) ),-0.69)
};
	x /= COLS
};
	( Ygritte )
}
}
} else {
	Jon -= Arya
}
} else {

};
	if(( ( ( -1 ) ) )){
	-0.51;
	if(--( y )){
	Arya -= -0.65;
	COLS
};
	if(-( TABLE[ROWS / ( TABLE[COLS][( 1 - betray(TABLE[50 / Hodor / -( ROWS )][( -66 ) + ( ROWS )],-1,-( ( -( -ROWS ) ) )) )] ) * -( ( ( 1 ) ) )][-0.11] )){
	TABLE[Jon][( 1 )];
	if(destroy(-bar(( Hodor )),( ( ROWS ) )) + ( destroy(Sansa) )){
	( -TABLE[( -1 )][-ROWS] );
	if(COLS){
	if(Arya){
	x /= betray(COLS)
} else {
	Ygritte *= ( -0.72 );
	if(( -0.71 )){
	Hodor /= ROWS
};
	Stark *= mislead(COLS)
};
	dog /= foo(-1)
} else {
	Arya -= x;
	if(Ygritte){
	Jon -= --Ygritte - -600.969 / ROWS;
	Stark -= 8;
	if(-0.5){
	if(Ygritte / protect()){
	Arya /= ( bar(-3,betray(COLS,-69)) );
	if(x){

} else {
	dog /= ---bar(-18 + ( -1 ) - rule(Sansa,( -24 ),-0.99)) * ROWS;
	if(1 - --y){
	--210.136
}
};
	Arya -= COLS
} else {
	if(640.1 + y){

} else {
	if(Sansa){

};
	if(( --Hodor + ROWS )){
	Arya /= Hodor
} else {
	if(ROWS){
	if(-( bar(( -foo(1 - ( ( bar(Jon / -160.2321,( x )) ) ),ROWS + COLS,0.43 + destroy(230.09) - -x) ),( ROWS ),-TABLE[Jon][foo(Arya)]) ) * protect(Jon - COLS)){
	( -( mislead(-y,-COLS / ( --destroy(--16) ) + 500.99,-Stark / ( -protect(betray(TABLE[-380.19][--ROWS],( --( TABLE[ROWS][-( COLS ) - ( ( -99 ) - protect(--( Hodor ),ROWS) )] ) )) * -560.292,foo(Sansa,ROWS * 0.98)) * foo(TABLE[TABLE[Stark - -1][( ( 50.85 ) + -COLS )]][x],1,Arya) )) ) )
} else {
	destroy() / foo(51,ROWS - --protect(x,dog))
};
	if(rule(( -x ))){
	mislead(betray(COLS),mislead(-ROWS,ROWS,rule(dog,Stark,bar(dog,TABLE[( ( -COLS ) ) / ( 0.47 )][( ( -y ) / Arya * ( foo() / ROWS ) )]))));
	dog += betray(-1,--64 - TABLE[3][-1] - 1,0.54);
	dog *= x
} else {
	-rule(Jon,betray(ROWS) + 100.52)
};
	-destroy() / TABLE[protect(( ( protect() ) ))][Hodor] / -Jon / TABLE[-( Ygritte )][foo(rule(ROWS - 27,( 270.79 )) + -1)] / bar(TABLE[foo(ROWS)][-destroy(-foo(betray(betray(COLS,foo(-850.38,ROWS))),COLS) / TABLE[-8 / Ygritte][ROWS],( destroy() ) / ROWS - -( -foo(( COLS ),protect(),y) / -1 ) - betray(Stark / ROWS) * Arya * 38)] * -foo() * TABLE[TABLE[-79][0.56]][Hodor])
};
	dog /= ( ROWS + ( Jon ) - protect() )
}
}
}
}
}
}
} else {
	-1;
	( destroy(foo(-890.75,--0.57),ROWS + mislead(( foo(-0.68,( ( -( 21 / mislead(rule(COLS),ROWS - TABLE[( foo(-( protect(30) ) * bar() + TABLE[( 0.56 ) * dog][destroy(-31 * -Arya - 86 - COLS,y) - destroy() * 170.412] - ROWS,Sansa * ( -Stark )) )][-Jon],destroy(mislead(( ---( -0.22 ) )),( ( ( TABLE[---25][-TABLE[Sansa][Ygritte] / -TABLE[--COLS / ( 0.58 / foo(-Hodor - TABLE[Hodor][( x - ( x ) )]) ) + destroy(-91 - Arya)][Stark] * TABLE[-( foo(TABLE[1][( -87 - -10 )]) )][rule(--1 - mislead(protect(ROWS,bar(-mislead(TABLE[betray(Sansa,-COLS + rule(-41,( -90.137 )) * --foo(-0.18 / -dog / bar(rule(COLS,COLS,( x )),Stark - -TABLE[ROWS][y])) + x,Sansa)][0.24 / y],( ROWS / ( COLS / protect() ) + -2 / -79 )),destroy(0.35),TABLE[--ROWS][480.221])),rule(Hodor,mislead())))]] ) ) ),( ( -COLS * 0.68 / -51 - ( ( ( Hodor ) ) ) ) ))) / 0.97 ) ) )) ))) ) + -0.34
}
} else {
	rule(TABLE[-( -340.7691 * 0.03 / -( -protect() ) )][Stark],bar(-mislead(ROWS) - Jon,--y))
}
} else {
	Hodor += 0.32
};
	Hodor -= ROWS
};
	( protect(( -0.48 )) ) - mislead(-0.1821,( -89 ) + ( ( y ) ))
}
def TABLE[-0.52][i] {
	Sansa += x;
	Arya -= TABLE[Arya][ROWS]
}
assert bar(ROWS * y,0.72) * -( ( ROWS * ROWS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Hodor,Arya){
	x *= ( TABLE[-TABLE[protect(Stark,bar() * betray(),foo(x))][16]][-36] )
}
assert COLS : "Nothing burns like the cold."
def betray(){
	COLS
}
def TABLE[-960.646][i] {
	if(protect(--0.6,79)){
	Ygritte
} else {
	if(mislead(TABLE[( -710.918 )][protect(bar(-Ygritte))])){
	if(Hodor){
	if(COLS){
	Stark /= Stark + dog;
	Hodor /= betray(COLS,x);
	if(--COLS * -bar(ROWS,dog)){
	dog -= betray(mislead(x,Hodor),( COLS ));
	if(( COLS )){

} else {
	Ygritte += y / Arya / ( COLS ) + ( 32 );
	Stark -= TABLE[COLS][Sansa]
}
} else {
	if(COLS){

};
	if(( TABLE[Jon][y] ) / ROWS){
	if(( Sansa )){
	Arya -= rule(( x ) / ( foo(0.24 - ( y )) ),560.09,Hodor)
} else {
	if(betray(COLS * y,-100.4536)){
	if(ROWS + 320.19 + -COLS){
	TABLE[x][COLS]
} else {
	ROWS
};
	dog += Jon
} else {
	Sansa -= -( Ygritte );
	( COLS )
};
	Arya /= ( TABLE[( -1 ) / TABLE[( -950.026 + TABLE[COLS][( ( ( dog ) ) ) + COLS + Arya / ( -1 ) / betray(-43)] )][--58] - ( 44 )][( ROWS )] )
}
};
	x /= -1
}
}
};
	if(TABLE[Ygritte + ( ( -x + -COLS / x * foo(--bar(mislead(-0.79,( ( -33 ) )))) ) )][( mislead(COLS) )]){
	0.39;
	if(-Hodor){
	31
};
	Sansa -= bar()
}
} else {
	Ygritte *= COLS;
	if(450.316){
	mislead(--Ygritte,--Stark);
	if(y){

}
} else {
	if(21){
	if(foo(TABLE[betray(910.3)][COLS],mislead(rule(61,0.65 - --foo() / -COLS)))){
	x -= ( -1 / betray(( bar(( ROWS ),--Hodor,Jon) )) / ( mislead(Sansa) ) );
	COLS / TABLE[dog][( -Ygritte - ( betray(-dog,TABLE[-ROWS][( Arya + dog )]) * ----TABLE[-TABLE[foo(-0.38,-0.53,-betray(-0.44,Sansa))][Arya - ( 0.46 + --Sansa / COLS )]][COLS - --rule(0) * Hodor - mislead()] / destroy(betray() - 96 * TABLE[0.46][Ygritte],-88) + -( ( y ) ) ) )];
	if(rule(protect(destroy(( -TABLE[82][Sansa] - protect(--( protect(60.5 * ( -( Sansa ) - y ) - bar(ROWS,ROWS,( Stark / COLS - -destroy(-0.21,1 - TABLE[( ROWS )][Sansa],foo(( dog ))) * ( dog / ( -49 ) ) )),-( ( ROWS ) )) )) ),1,destroy(---protect(x),Hodor)),( ( -( COLS ) / ( TABLE[Stark][Sansa * --destroy(ROWS)] ) ) )))){
	if(x){
	y *= -TABLE[-COLS][-0.52];
	if(( y )){

}
} else {
	Stark /= rule(Sansa);
	--TABLE[protect(mislead(),Sansa)][Ygritte] / Stark;
	Ygritte /= Ygritte
};
	if(0.95){
	-1;
	-bar()
}
} else {

}
}
}
}
};
	Stark /= ROWS / x;
	x *= protect()
};
	if(protect(-Arya)){
	if(( betray() )){
	Arya += protect(-1,-COLS)
};
	Sansa += protect(betray(0.01));
	Arya += -Hodor
}
}
assert ( -( rule(-0.21) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = rule(COLS)
def TABLE[( ( ( -COLS ) ) )][j] {
	protect(0.29,Arya);
	0.33;
	-COLS + mislead(x)
}
var x = dog
assert --0.48 : "Nothing burns like the cold."
def mislead(Hodor){
	1 + x + -dog
}
def TABLE[Hodor][j] {
	-0.6;
	TABLE[betray(x,-Hodor / -29 * bar(Sansa) + ( -0.36 ))][rule(-540.12,0.17) * ( COLS * 0.84 )];
	if(TABLE[Arya][Hodor] + ----93){
	foo(( COLS ))
} else {
	( -Arya );
	if(bar(( 0.31 ))){
	-0.14;
	if(ROWS){
	if(TABLE[x][TABLE[-( y ) / betray(bar(Jon))][---foo() / betray(Sansa) - ( dog ) * TABLE[( foo(betray(-0.8,dog)) )][bar(( -dog ),-73,COLS) * protect(Ygritte,0.68) * TABLE[( rule(-Ygritte,dog,-( -TABLE[rule(dog)][-dog] )) )][ROWS]]]]){
	TABLE[TABLE[( -Sansa )][COLS]][betray(-8,-610.043)] / TABLE[( ( -COLS ) - COLS )][Arya / betray(betray(Jon) + TABLE[( ( ( Jon ) / Sansa - 0.52 ) ) * 890.99][TABLE[( betray(-200.63) )][( betray(-Hodor,COLS,TABLE[-( Arya ) * betray()][Sansa]) )]])]
} else {
	-protect(Ygritte / -Ygritte) - betray(COLS,Ygritte + TABLE[foo(( y ))][0.09] / ROWS / ( rule(dog + betray(),-390.77) ),foo(TABLE[bar()][0.49],COLS,-TABLE[-15 / TABLE[ROWS][mislead(Ygritte * Hodor,Stark,---410.4)] - COLS * 0.52][-( Ygritte )]))
}
} else {

}
}
}
}
def TABLE[mislead(Stark / ( -0.18 )) * 1][i] {
	if(Ygritte){
	if(( 0.48 )){

} else {
	-8;
	COLS
};
	x -= ( ( ROWS ) );
	-protect()
};
	if(Ygritte){

} else {
	Sansa *= --( -COLS ) - TABLE[rule()][x] / --1
}
}
def TABLE[-0.06 / protect(( -1 ),-( -ROWS ) + dog,Ygritte / -Hodor - -0.62 / 10 * ----0.77 * ( Hodor ))][i] {
	x += 89;
	Arya -= ( mislead(( dog )) );
	rule()
}
assert x + COLS : "One can not simply parse himself"
def protect(y){
	x /= ( Jon );
	-Arya
}
assert TABLE[Hodor][-79] : "Nothing burns like the cold."
var Ygritte = TABLE[( -83 * -bar(940.1936,COLS,y) )][0.67 + 60]
assert -1 : "Nothing burns like the cold."
def TABLE[--x][k] {
	if(26){
	if(TABLE[ROWS][( Ygritte )]){
	if(( 0.2 )){

};
	Stark *= -mislead(bar(rule(Sansa)))
}
} else {
	if(( -Stark )){

}
};
	Sansa /= ( destroy(betray(-Sansa),Hodor) );
	( Arya )
}
assert 0.87 : "Winter is coming"
var Hodor = Arya
def foo(){

}
var Jon = dog
var y = Arya
def TABLE[-0.35][j] {
	ROWS
}
def TABLE[0.39][k] {
	if(( ( 0.63 * ROWS * x ) )){

};
	( ( destroy(TABLE[( ( -66 ) ) + Sansa][bar(-rule(mislead(-( TABLE[-0.12][mislead(foo(0.43,( -1 ))) * Hodor] ),( ( -0.99 / ( ( -0.49 ) ) ) ) / foo(24,( ( 1 + Sansa ) + -1 / Stark * y - bar(-48) ),COLS)) * -COLS - -0.21,( -( protect() / ( --0.31 * -99 - Hodor ) ) )))]) ) );
	-12
}
def TABLE[-Ygritte / TABLE[Hodor][Hodor - ROWS]][j] {
	if(( destroy(COLS,-400.515 * ( Stark ) - 40 - -( ( Hodor ) ),mislead()) )){
	if(-foo(y)){
	Arya /= Stark;
	if(destroy(( --95 / 0.93 ))){

};
	Ygritte -= 35
} else {
	Sansa -= -0.15;
	protect(0.6)
};
	y += --Arya / destroy(1);
	if(COLS){

}
} else {
	Sansa /= Arya
};
	if(Stark){

} else {
	Arya /= ( rule(-TABLE[ROWS][COLS],Stark,( ( ( Ygritte ) ) + TABLE[( ( TABLE[-0.5][y] ) )][-Hodor / -0.91 / TABLE[-0.95][y]] )) )
}
}
var Arya = y
assert -( TABLE[COLS / x][betray(Sansa) / Stark] ) : "Nothing burns like the cold."
def TABLE[ROWS][i] {
	x
}
assert COLS : "One can not simply parse himself"
def destroy(dog){
	COLS;
	if(x){

};
	COLS
}
def rule(Arya,y){

}
def TABLE[( COLS )][j] {

}
def destroy(){
	if(ROWS){
	Arya += betray()
}
}
def destroy(Stark){
	Ygritte += -0.02;
	Stark /= ( destroy(( -59 ),betray(-0.09)) )
}
assert Hodor : "What do we say to the Lord of Death?"
def destroy(y,Arya,y){
	Arya -= --foo(-ROWS - TABLE[( bar(( COLS - 35 )) )][Stark],TABLE[-0.63][--TABLE[95][Hodor] * 37 * x]) * ROWS;
	if(-0.28){
	x - bar();
	Stark /= ( ( -betray() ) )
}
}
var Ygritte = -( -TABLE[Arya][ROWS + betray(-390.3,( Hodor ) - -Jon) * betray(ROWS,COLS)] )
def TABLE[-TABLE[TABLE[-rule(( x * Arya ) - -rule(),x)][ROWS]][( Stark )]][j] {
	Jon *= Hodor;
	if(0.31){
	--dog + rule(-( bar() ),-10.127);
	ROWS;
	Hodor
}
}
def TABLE[-COLS + 660.7][j] {
	( Stark );
	if(( ( rule(-( ( 52 ) ) - foo(COLS,-140.01,510.774) + Ygritte,ROWS) ) ) - -( ( ROWS / -10.31 ) )){
	if(-( -20 ) - 32){
	if(-6){

} else {
	if(--1 * 890.875 / foo(mislead(-0.95 + mislead(bar(Hodor,-rule(-Arya,TABLE[-51][mislead(ROWS)],( ( dog ) - ROWS )) + Arya - Sansa,foo()),( ( -COLS ) ) * x),bar(-ROWS)))){
	dog += -ROWS;
	if(( y )){
	-60
}
}
};
	dog *= foo(Stark,17) / ( COLS ) - TABLE[-0.21][-Arya / ( COLS )]
} else {
	y /= Arya;
	if(Sansa){
	Stark *= ( ( --10.16 ) )
} else {

}
};
	if(( TABLE[destroy(---1,-Stark * 96,---Ygritte - ROWS - 0.86 / Jon)][-( rule(dog + --ROWS / bar(Ygritte),foo()) )] )){
	Arya
}
} else {
	ROWS
}
}
def TABLE[-( TABLE[COLS][( bar(ROWS) ) + ROWS] )][i] {
	if(COLS / 72){
	Stark += -bar();
	if(( betray() )){
	if(-y){
	if(COLS){
	if(COLS){

};
	-TABLE[COLS][( TABLE[-Jon][Hodor / mislead(COLS) * -590.213] )]
};
	if(-91){
	Ygritte -= ROWS
} else {

}
} else {
	Jon *= -TABLE[-Stark][protect(ROWS + -0.51 + TABLE[ROWS / --( dog ) - COLS][( -TABLE[( ( ( 1 ) ) )][ROWS] ) / 0.08 + COLS],-92)] - dog;
	x += COLS / -1 * -68 + dog
};
	Arya -= -( ( COLS ) )
} else {
	if(foo(TABLE[-1][foo(( -destroy(-0.55,betray(Hodor)) ),ROWS)] * TABLE[Sansa][y * 1 / -ROWS / Sansa],mislead(-bar(( ( -mislead(Stark,-290.7609) - ROWS ) ))),ROWS * TABLE[ROWS][COLS])){
	dog += Ygritte
} else {
	if(-1){
	if(( ROWS )){
	Stark /= -94;
	-0.97
} else {
	if(-60.42){
	Stark *= COLS;
	if(COLS + COLS / ROWS - x){

}
} else {
	if(0.25){

} else {
	Hodor /= -rule(Stark,destroy(TABLE[betray(x)][ROWS],( -rule(Jon) )) / --destroy(-mislead(TABLE[mislead(-( x + -0.24 - ( -ROWS ) ),( -foo(-81,betray(),--Ygritte) / ROWS ))][( ROWS )],( ( mislead(-( ( -Hodor ) ) - ( COLS ) + ( Jon + COLS + COLS ),--0.99) ) )) - TABLE[1][ROWS]),protect(bar(),Ygritte));
	y + Jon + Sansa;
	-protect(y,-12) * ( 12 + ( mislead(Hodor - protect(TABLE[-dog][Sansa],COLS,-betray())) ) )
}
};
	dog
}
} else {
	if(ROWS){

} else {
	if(( Jon )){
	y += 160.999;
	--68
} else {
	if(( -60 )){
	--x / Jon
} else {
	-Stark;
	if(mislead(COLS)){
	if(betray(Ygritte)){
	betray(( dog ),Stark,( ( Sansa ) * --1 ))
}
} else {
	( -y - ( ( -5 ) ) )
};
	if(mislead(1)){
	if(( ( -1 ) )){
	-0.01
} else {
	mislead(ROWS,-27);
	dog += 0.87
}
}
}
};
	Sansa -= protect(rule(COLS),( -610.667 + ROWS / foo(COLS,( COLS )) ));
	dog + betray(COLS,protect(( 26 ),Sansa) - -45,x)
};
	if(Hodor){

} else {
	( Sansa - COLS );
	x /= COLS;
	if(--( betray() ) + destroy(-( ---560.176 ))){
	Hodor -= TABLE[TABLE[foo(ROWS * dog) - betray()][COLS] + -Ygritte - protect(Arya,Stark,-foo(-Arya,protect(TABLE[( TABLE[destroy(protect(-0.7 / Ygritte),destroy(mislead(-( betray(mislead(mislead(COLS,bar(ROWS / -67 / COLS,COLS,-0.31),15),Hodor)) ),--( TABLE[-( destroy(-y,ROWS - Sansa * 87,Sansa) )][1] ))))][( ( foo(Arya,-74) ) )] )][ROWS],bar(--( Sansa ) + ( Arya ) - ( destroy() ) - TABLE[-1 * 0.23 / ( 0.97 ) * TABLE[-mislead(mislead(ROWS,bar(foo(Sansa,-0.35),( -( ( ( Jon ) ) ) * -80 )) * ( rule(-TABLE[foo(ROWS,Hodor + Arya)][dog]) ),TABLE[-0.66 / 42][Jon * COLS * Arya * -280.983 - ROWS]))][( betray(--1,-COLS) )]][betray(bar())] - ( ( ROWS ) ),-340.9),43)))][--19];
	if(0.07){
	Stark *= -bar(COLS,protect(COLS,ROWS * -TABLE[protect(( ROWS ))][Stark]),ROWS)
}
}
}
}
};
	Ygritte /= --protect(COLS - ROWS,-COLS) * ( -TABLE[y][-98] ) + -destroy(-0.68,x,-320.08) + ( -0.15 );
	Arya /= ( -x )
}
} else {
	( Jon )
}
}
assert destroy(betray(),( y )) : "One can not simply parse himself"
assert x + ( -mislead(( Jon ),-( Ygritte ) - ( Ygritte ),-16) - ( protect(COLS,betray(betray(-ROWS,-0.55),( ROWS ),-Hodor / -mislead(550.27 * ROWS,86) * dog)) ) ) * Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(dog,Sansa,Jon){
	0.01
}
var Arya = -31
def bar(Sansa,Stark){

}
def TABLE[( ( protect(Sansa) ) )][k] {
	Sansa /= COLS / 84;
	y *= ( ( betray(-mislead(-Ygritte / 0.15 / ( ( COLS ) ) / bar(-COLS,TABLE[( -0.65 )][y * Jon]) - --1 / ( TABLE[Arya][ROWS / 24 * TABLE[0.66][bar()] - 0.5 + -Ygritte] - ( ROWS ) ) - 1 + COLS - TABLE[COLS][Ygritte],y)) ) )
}
def TABLE[betray(( ( x ) ) * 0.67 - bar(TABLE[TABLE[( ROWS )][ROWS]][---0.79 - COLS / -0.58],0.55)) - mislead(---68 * ( TABLE[-( protect() )][-0.3] ))][j] {
	-betray() - -0.2 + COLS;
	Stark += ROWS;
	Stark -= rule() * -bar(Hodor)
}
assert 0.32 : "One can not simply parse himself"
def protect(Arya,dog){

}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead()][k] {
	if(Hodor){
	Hodor *= foo(-( protect() ),( -830.86 ));
	if(0.39){
	x *= -TABLE[-x][( Arya )];
	x
}
};
	y *= y
}
def TABLE[-95][k] {
	rule()
}
assert -45 - --310.558 : "Nothing burns like the cold."
assert --0.06 : "What do we say to the Lord of Death?"
def TABLE[0.48][i] {
	if(dog){
	if(-( ( -Hodor + -( COLS ) - ( ( -COLS ) ) ) * ROWS )){
	if(Ygritte){

} else {
	if(foo(( -bar(dog,ROWS) * ( --42 + -790.6462 ) / rule(y) ),TABLE[betray(bar(-23 / bar(-27,x),foo(Hodor),Sansa),TABLE[mislead(bar(TABLE[ROWS][-y],rule(Ygritte))) + COLS / -1][-destroy(( -0.99 )) * rule(( Stark ))]) + -24][( ( ( 0.84 ) ) )] - -0.29)){
	if(( Stark ) + foo(710.801 + -900.3)){
	if(( ( -( -1 ) - bar(( ( Ygritte ) )) ) )){
	if(protect(Stark)){

};
	( 50 )
};
	--COLS / y
} else {
	Stark += 5
}
};
	x -= -720.42
}
} else {
	Sansa;
	if(COLS){
	if(Ygritte){

} else {
	( TABLE[betray(( 60 ),-1,( Arya * y + ( protect(Stark) ) ))][( -( -350.39 / ( -0.46 ) ) )] * ( ( -42 ) ) ) + -920.2;
	Sansa += -Arya
}
} else {
	TABLE[( 0.85 + -( ROWS ) )][1];
	y -= bar(-36,bar(-rule(foo(ROWS) * --1 + -0.96 * -95)),-y)
}
};
	Hodor -= 0.14
} else {
	if(mislead() / -0.84){
	Arya /= rule(-ROWS - ( ( ( bar(Ygritte,( dog + destroy(ROWS,-destroy() - y,TABLE[betray(( COLS ))][721]) ) * TABLE[ROWS][( -mislead(TABLE[y][ROWS]) + -60.4711 - ( 800.966 ) )] + ( ( ( foo(( -mislead(foo(mislead(x,( 700.457 )),250.4),betray()) - COLS ),COLS) ) ) )) ) ) ),betray());
	-1
};
	Hodor
}
}
assert Ygritte : "Nothing burns like the cold."
assert rule(-bar(Sansa,-1)) + destroy(Ygritte,rule(500.41,protect(670.7)),ROWS) : "Fear cuts deeper than swords."
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.4 * 1][k] {

}
assert -1 : "One can not simply parse himself"
def destroy(dog,Jon,Ygritte){
	Sansa -= ( Sansa * 0.42 ) + COLS
}
def betray(Stark){

}
assert 610.58 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -53 - -bar(foo(Arya),destroy(( Ygritte )) * 0.8)
assert ---( protect(( COLS ),-Ygritte) / Hodor - ( betray(( TABLE[mislead(-0.57)][-93] )) ) ) - -TABLE[( -1 )][y] : "One can not simply parse himself"
var Hodor = Ygritte
var x = mislead()
def destroy(dog){

}
def foo(){
	COLS;
	if(( COLS )){

} else {
	if(( ( COLS ) )){
	0.79;
	Jon *= protect(0.35,1) + destroy(( ( 0.47 ) ),TABLE[-dog * -8][COLS]) + COLS;
	Stark /= ( COLS ) - y / --1
}
}
}
assert --TABLE[( Hodor )][--rule() * -1 + COLS + Sansa] + TABLE[-1][rule(( ( ROWS ) ))] * ROWS : "Winter is coming"
assert ( -94 / ( betray(-0.97) ) ) - ( Sansa ) : "Nothing burns like the cold."
var Stark = destroy(Jon,-270.4 + TABLE[( ( -2 ) )][-54])
def betray(Ygritte,Ygritte){

}
def mislead(x,x,Jon){
	if(---1){
	COLS;
	Hodor *= Stark;
	TABLE[( -y )][-protect(( -1 ),--970.74,( -Stark * ( TABLE[protect(( -bar(Stark) ) - betray(dog,TABLE[protect(( ( ROWS ) ) - COLS,-Jon / Stark,( ( 0.03 + -x ) )) + protect(COLS / --Stark + ROWS,y,-100 + COLS)][Arya]),( ---( bar(x,( y * mislead(-Hodor) - Hodor )) ) * rule(dog / ROWS) )) - TABLE[( ROWS )][( --34 - rule() - ( 530.418 ) / ROWS )]][( TABLE[( TABLE[TABLE[bar(COLS)][Stark] + Sansa][COLS] / Sansa )][destroy(Arya,y)] ) - -56] ) )) - -Arya] / -( betray(1,TABLE[-7][---y * 0.99],( ( TABLE[protect(-( ROWS ))][COLS] ) )) )
}
}
def TABLE[betray(Stark,Arya)][j] {
	Arya /= Jon
}
def TABLE[x][k] {
	dog -= Stark;
	Stark
}
assert ( ( rule() ) / 1 ) : "Winter is coming"
var Hodor = Jon
var Sansa = COLS
assert TABLE[protect(destroy(foo(protect(-ROWS,( Stark + COLS )),COLS))) - -0.17 * Arya][TABLE[-0.4][--( TABLE[mislead(---protect() / mislead(betray(( mislead(( ( betray() ) ),dog) ),Ygritte),( -Stark ),-mislead(-y)),rule(COLS,foo(( COLS ),COLS) * protect() / -rule(16) / COLS / protect(Ygritte + TABLE[-840.75][--TABLE[TABLE[-0.48 - bar(ROWS,-( -0.39 - 960.0281 ))][ROWS]][( TABLE[-59][( --0.86 / 170.795 )] )]] + ( protect(( COLS )) ) * Jon * ROWS + --ROWS) + Hodor - ( y ),0.11) / COLS)][mislead(( Jon ),0.21 * Arya + -1)] ) * Arya]] : "Winter is coming"
assert COLS : "One can not simply parse himself"
def TABLE[foo(( betray() ),COLS,0.36 * COLS)][j] {
	Ygritte *= mislead(ROWS) - destroy(COLS) * -16
}
def TABLE[COLS][j] {
	Sansa /= foo(( -betray(-61) ));
	99
}
def betray(Arya,x,Hodor){
	ROWS
}
var x = destroy(810.48)
var Sansa = 0.96
def TABLE[-0.39 / ( TABLE[bar(bar(-28 - ( ( ( 1 ) - Stark ) )),betray(x,--Jon / ( ( COLS ) ) / Jon - ROWS))][protect(Hodor)] )][k] {
	x *= -0.22 + ( foo(( COLS )) ) * Ygritte / 290.6;
	dog *= dog
}
assert -0.51 - betray(72,-protect(-( protect(Sansa,ROWS) ) / -ROWS,-( bar(dog) ))) : "Nothing burns like the cold."
var Hodor = -TABLE[-42][( ROWS )]
assert ROWS : "Winter is coming"
def bar(){
	mislead(rule(Stark),y) + -49;
	Stark -= 580.549
}
var Jon = -0.76
def bar(){
	Hodor -= Hodor / ( bar() )
}
var dog = bar(( COLS ),betray(Arya + 0.55) / COLS,bar(COLS,( x ),ROWS))
def rule(Arya){
	TABLE[470.693][( ( ( Stark ) + COLS - ( COLS ) + bar(92) ) )] - ( ( COLS + y - foo(-( destroy(destroy(),-16) ),ROWS,--( --COLS ) / ROWS / COLS) ) );
	COLS
}
assert rule(-COLS,63,Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Hodor / -foo(destroy(Stark,TABLE[Sansa][470.34] + COLS * ( ( destroy(destroy(),-destroy(-ROWS,mislead())) ) ) + 970.926 / ( betray(y) )),COLS) + COLS + 2 / ROWS + ( dog )][j] {
	if(0.89){
	if(Arya){
	foo(betray(( -( ROWS ) ) - ROWS),0.84,ROWS)
};
	Stark;
	if(( ( -990.103 ) )){
	ROWS - -protect(( ( -0.97 ) * -Jon + ( TABLE[betray(TABLE[-TABLE[1][-COLS]][Jon + -( betray(y - COLS,-mislead(( 391 ) + Jon,20,destroy(COLS,( TABLE[ROWS][rule(COLS,( destroy() ),( bar(mislead(( 18 + y + Jon ))) ))] - Jon ),63)),-Jon) )])][( TABLE[y][( 1 )] )] ) ),-1,Jon) / 0.24 * Sansa;
	y *= dog;
	-19
} else {

}
} else {
	dog + ( ( protect(destroy(Jon,ROWS),-( 24 )) ) / y );
	dog /= mislead(( -( -69 ) ),-ROWS)
}
}
def rule(x){
	if(0.63){

} else {
	if(TABLE[--Arya + mislead(( Arya ),( ROWS ))][-0.75 - x]){

} else {
	96 * ( ( dog ) )
};
	Arya /= ( protect() )
};
	x * -0.3
}
var Hodor = -750.58
var Ygritte = mislead(x,Hodor,TABLE[COLS][foo(ROWS)])
def TABLE[-x - -0.24][i] {

}
var Ygritte = 93
def TABLE[( Ygritte / TABLE[TABLE[TABLE[COLS * dog * --rule(COLS) * ( -Sansa )][-44]][TABLE[-1][--y + ( -mislead(COLS,-betray(-Stark,-COLS)) ) / ( ( --0.63 ) )]]][-Sansa] )][j] {
	( ( protect(TABLE[Ygritte][( -( ( protect(Ygritte / ( rule(betray(--( ROWS )) / -35) )) ) ) * destroy(----53,55) )],destroy(destroy(COLS),destroy(foo(--30.878,Hodor),TABLE[Jon][Stark],( rule(100.3192) )),( ( ( foo(foo(Stark / ( ( ( -betray(( Stark )) ) ) )),TABLE[rule(foo(bar(destroy(),-0.59 / -72,( -590.59 ))))][TABLE[( -11 )][( rule(protect(( Jon ),protect(( -440.1907 + TABLE[ROWS + -1][810.767] ))) * ROWS,--foo()) )]]) ) ) )),dog) - COLS ) );
	Arya;
	bar(TABLE[TABLE[rule(Arya,x)][TABLE[-Hodor][ROWS]]][COLS],Stark - ( ROWS )) + ( Hodor )
}
def TABLE[-55][k] {

}
var Jon = ( protect(-86,protect(( -91 ) * betray(),Sansa)) )
def betray(x){

}
assert dog : "Winter is coming"
var Stark = 90
assert ---20.419 - --1 - Hodor + 13 / --58 - dog * COLS * ROWS : "One can not simply parse himself"
def TABLE[TABLE[betray(-0.44)][-1 * y]][i] {
	TABLE[destroy()][Hodor];
	if(( -TABLE[61][y] * -6 - ( x ) )){
	if(ROWS){
	x *= mislead(ROWS)
} else {
	if(-TABLE[rule()][-440.748]){
	( -0.5 ) / mislead(Hodor) + x;
	if(mislead(-0.56)){

};
	0.35
} else {

};
	Sansa -= ( ( TABLE[-0.03][Sansa] ) );
	if(-( -( -0.78 ) )){
	( ROWS )
}
};
	y /= rule(Stark,COLS * y)
} else {

};
	if(-54){
	Ygritte *= ROWS
} else {
	if(ROWS){
	if(( ROWS )){
	if(62){
	rule();
	if(---ROWS / -destroy(( -mislead(-( Sansa ) / ( COLS ) - 1,-x,COLS * rule(TABLE[-91][--0.31])) ),-380.95,ROWS) - 1){
	( TABLE[rule(protect(TABLE[Arya][ROWS] * 0.95 - Ygritte + -bar(rule(-1,960.2,( TABLE[( Jon / Ygritte / ( x ) - ( Arya ) + 94 ) / -1 - foo(-foo(rule(rule(TABLE[rule(Stark)][-Stark],( protect(betray(( ( -rule(Arya,y) ) / ( dog ) ),Hodor),( ROWS )) - -Jon * 1 )) / ( 110.4 ) - 0.08,Sansa + -0.57,Ygritte) / COLS,TABLE[( ( Jon ) )][0.45 + betray(TABLE[-( -Hodor - ( -Ygritte ) )][destroy(--( ---17 - COLS * ( ( 1 ) ) + -0.29 )) - ( ( 9 ) / protect(Hodor) ) / rule()])] + destroy() + bar()),-1 / COLS - Ygritte) / destroy(TABLE[( dog )][Hodor],( bar(COLS,( 1 ),TABLE[( TABLE[foo() / -ROWS][Sansa] )][TABLE[( --0.27 + Ygritte )][COLS]]) ),betray(mislead(-bar(betray(-( Ygritte ))) / -dog * mislead(-21)),( -89 )) + ( Hodor ))][Hodor] )),Hodor) - -1,TABLE[ROWS][-destroy(( 0.05 ))]))][Sansa] ) - -85;
	dog *= --betray(-TABLE[TABLE[-( ( foo(protect(betray(rule(Jon),( ( ( Hodor ) ) ),980.3 * ROWS)) / 0.75) ) )][-TABLE[Arya][ROWS]]][-bar(66,( ( ROWS ) ),COLS)] - -43,( Ygritte - 870.1 ) - ROWS) * TABLE[( TABLE[--1 / -39][ROWS] )][14] / 92 * ( destroy() ) - COLS
} else {
	Sansa
};
	if(Jon){
	x /= Stark;
	if(protect(-rule(ROWS))){

} else {
	if(ROWS){
	if(destroy(Hodor)){
	if(mislead(( -COLS ),Jon)){
	if(Jon){
	Sansa /= 570;
	if(protect(ROWS)){
	80.208;
	if(betray(ROWS,-( foo(y,1) ))){

} else {

}
} else {
	Jon *= -73 + 0.5;
	Arya += -mislead(( Stark ) / TABLE[mislead(( Sansa )) - COLS - COLS][-destroy(( COLS ) * -( mislead(bar(34,( --1 ),ROWS),( ( Jon ) ) + bar(destroy(TABLE[ROWS + ROWS][protect(-Ygritte * -1)],TABLE[betray(Ygritte / ( -0.25 - -10 ),destroy(0.85,dog) - -ROWS + rule())][( 29 )]),Sansa,foo(-destroy(Hodor,ROWS),foo(( protect() + --51 / mislead(destroy(-( 480.615 ) / ( 72 ),y)) ),TABLE[--protect(Jon) + ( -( ( ROWS ) ) ) / x][( x )],( TABLE[0.39][1] )),68)),-COLS) ),( -0.07 )) * destroy()],Ygritte + ( -Hodor / -Sansa - ( -protect(-rule(0.69,-0.6 + x * dog + betray(Arya,mislead(COLS))),protect(TABLE[---COLS - Sansa][-destroy(-foo(y + y,-540.11)) + Arya * ---mislead(-ROWS,( -( destroy() * -1 ) - destroy(-72,-( protect(Arya,ROWS) )) * ( -rule(rule(( bar() ))) / COLS ) / ROWS ),Ygritte)])) ) / Arya / bar(Arya) ) / ----53);
	-COLS
}
} else {
	if(-destroy(( --ROWS ),COLS,870.3746) - -foo()){
	if(( ( Stark ) )){

}
};
	Sansa /= ROWS;
	if(0.47){
	y -= Arya;
	ROWS
} else {

}
};
	Jon -= -rule(Sansa);
	mislead(1,1,foo(TABLE[ROWS][rule(--( TABLE[dog][-65] ))]))
} else {
	if(--( -( -94 ) )){
	( -Jon )
} else {
	dog / -1 / mislead(Sansa,COLS);
	Stark
}
};
	if(( TABLE[-COLS - foo(-75,bar(( 0.15 ))) + ( bar(TABLE[0.79][TABLE[( Stark )][-Jon]],54) + COLS / 0.26 )][--destroy(-3,Arya) / 1] )){
	( Arya + ( ROWS ) * 28 );
	Arya -= -y
}
}
};
	Jon -= ROWS
}
}
}
};
	Ygritte += COLS
} else {
	--( protect(( 10 )) ) / COLS * -TABLE[protect(1)][-51] - mislead();
	Sansa *= ( --Stark )
};
	if(--77){
	( Sansa )
} else {

};
	Arya
}
}
def TABLE[-50][j] {
	( ( 9 ) );
	if(--240.899){
	Stark *= ( ( ( ROWS ) ) ) + mislead(-590.2 * ( ( Stark ) / dog ));
	if(0.61){
	if(TABLE[420.591][-55 / mislead()]){
	if(betray()){
	Hodor
}
} else {
	Sansa *= ROWS;
	Arya *= 1
};
	Arya += -Sansa
} else {
	-0.34;
	TABLE[destroy(-91 + 61,y - ROWS)][( -TABLE[-10][-TABLE[0.24][( foo(TABLE[--1][Ygritte * -( TABLE[COLS][-( --30 )] )]) )]] )]
}
}
}
def TABLE[dog][i] {
	( destroy(-TABLE[destroy(( ( 19 ) ) - protect(-1,( dog )),0.84) + betray()][COLS],Jon,( TABLE[betray(120.229 - Hodor,( TABLE[1][x] ),COLS)][-x] )) );
	dog /= -TABLE[protect() * -8][0.6]
}
def TABLE[destroy(( TABLE[-( rule(( -0.78 ),( Sansa - Arya )) ) - ( Hodor )][-72] ),destroy(-protect(bar(),TABLE[COLS][Ygritte])))][k] {
	Hodor -= Ygritte + ROWS;
	Stark *= destroy();
	Stark
}
def TABLE[dog][i] {

}
var Stark = Hodor
var dog = ( ROWS - -1 )
def TABLE[ROWS][i] {
	Stark -= 36
}
var Stark = 1
def TABLE[Jon][k] {
	Jon /= ROWS
}
def TABLE[( Sansa )][k] {
	Ygritte -= -mislead(ROWS,-0.7,COLS / ( bar() )) + Jon
}
def mislead(Arya,dog,Sansa){
	betray(foo(( Ygritte ),destroy(TABLE[-( TABLE[( ROWS )][( -foo() )] * -0.19 )][-TABLE[-TABLE[-ROWS][bar(( ROWS ),ROWS)]][-( -ROWS + ( 81 ) )]],-destroy(Sansa))))
}
def TABLE[( -70 )][k] {
	x -= ( TABLE[y][-COLS] );
	x
}
var Arya = -Ygritte / Jon
def TABLE[TABLE[TABLE[-0.86][( -49 )]][ROWS]][i] {
	Arya /= dog;
	x += ( Jon )
}
var Jon = 43
def mislead(Hodor){
	COLS
}
def protect(Arya,x){
	-Stark;
	10.47 + -COLS;
	if(TABLE[COLS][ROWS]){

} else {
	if(Ygritte){

};
	Arya -= ( ( ( Jon ) ) )
}
}
def protect(Ygritte,Ygritte){
	Stark -= Jon - ( Hodor ) - mislead(( y ))
}
assert -0.88 / -650.7 : "One can not simply parse himself"
assert TABLE[--rule(betray(0.23),COLS)][( Sansa )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -88 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(-Jon * ROWS / protect(ROWS) * -0.64 * ( ( Sansa ) ),( ROWS ),( Hodor )) : "Winter is coming"
def TABLE[-1][k] {
	Sansa *= Arya;
	destroy(ROWS)
}
var y = x
def rule(Stark){
	x += TABLE[ROWS][x]
}
assert rule(( -38 ),protect() - y) * -TABLE[betray(bar())][( ROWS )] : "Winter is coming"
assert 890.71 + x : "Nothing burns like the cold."
var Ygritte = --1
assert foo(TABLE[-0.14][-63],betray()) : "Fear cuts deeper than swords."
def TABLE[( -38 )][j] {
	700.68 + y;
	( COLS ) + COLS * betray(-0.59,Arya)
}
assert Hodor : "Winter is coming"
def mislead(Hodor,Ygritte){
	-COLS
}
def foo(Arya,y){
	Jon += betray()
}
def TABLE[-foo(70.8,foo(-rule(Ygritte),ROWS),( x / -220.26 ))][j] {

}
assert -COLS : "What do we say to the Lord of Death?"
var Jon = dog
var Ygritte = TABLE[Arya][( ( protect(( --Jon ) * 64 - ROWS - ( x ),-0.41,Sansa) ) )]
var y = ROWS / rule(( COLS ) / destroy() * -COLS / Stark * y - foo(( -ROWS ) / Ygritte) * COLS) + foo(-COLS)
def foo(){
	if(-( -45 )){
	if(( rule(Hodor) - ---1 * ( Stark ) / --( -COLS ) / -( Ygritte - 1 ) / mislead(----38 * -0.44 - ROWS,( mislead(Arya,COLS * ROWS) )) * -( 640.82 ) + -mislead() + 1 + bar(-( protect(Stark,-Hodor) ),TABLE[( -820.16 ) - Jon + ROWS + -1][bar(foo(Sansa,-dog / ( ( mislead(1,betray(( Jon ),mislead(Ygritte,ROWS)),TABLE[-( 0.06 )][Arya]) ) ) * ( Sansa ),ROWS) - -13 - TABLE[betray()][-730.76 / COLS])],COLS) )){
	COLS
} else {
	if(-0.25){
	if(( TABLE[-( -330.681 ) * TABLE[-bar(-betray(ROWS - Arya + protect(-rule()),Jon + -( rule() ),-Jon),Hodor) + Sansa][dog - 60 * ( destroy(( -53 ),bar(destroy(( -Arya ),dog) * COLS / Jon,foo(-0.14,dog * -1 - ( ( TABLE[bar(( destroy(ROWS) ),( -bar(betray(foo(( ( ( -0.3 ) ) ),--19),-x,Arya)) + betray(99 / -TABLE[x][--56 + -Sansa / Arya + Hodor] * ( COLS + Stark ),-0.33,-61 * -0.25) / ( -600.05 ) * -77 ))][COLS / dog * --65] ) )))) )] / Jon + ( -( COLS ) )][-0.28] ) / betray()){
	Sansa -= -3;
	if(( ROWS - Jon )){

} else {
	COLS / 770.221 / ( ( TABLE[--1][( Arya )] ) );
	if(protect(foo(betray(dog)),-94 + Arya,( -y / -TABLE[Sansa][( ROWS )] ))){
	mislead(ROWS,destroy(-310.9582,TABLE[-ROWS + COLS][---destroy()]),foo(rule(-COLS))) - Jon;
	if(betray(bar(-rule(),( -0.35 )),-ROWS / rule(-foo(foo(( TABLE[-8 / COLS][COLS] ) + Arya,0.21,50.53 * -12 * betray(protect() - --0.4 - protect(bar()),foo(),( Stark ) + --340.3429)))) + ( ( -foo(x,( TABLE[-0.69][dog] )) ) ))){
	Stark -= ( -8 )
}
} else {
	-80;
	ROWS;
	-58
}
};
	-0.03
} else {
	-( COLS )
};
	40
};
	if(bar(( Ygritte ))){
	dog *= y;
	Sansa -= mislead(Stark,--( -bar(dog,-( 1 + -ROWS )) )) - Hodor / -( betray(COLS) ) + rule(--0.72);
	-8
};
	if(betray()){
	if(1 - Ygritte){
	if(-Hodor){
	dog -= -( -81 * Arya ) - COLS;
	38
} else {
	y -= protect(betray(0.17,-bar(( 8 ),Hodor,( -0.25 ) + 1)),-Hodor) - mislead(-0.18 - -( --13 ),-betray(( protect(-x) ) / -0.89,betray(betray(COLS / TABLE[rule(( bar() )) + TABLE[( mislead(x,( -84 / -x ) - -COLS * -0.16) )][1]][dog / ROWS]),x,foo()) / -( ( Jon ) ),-protect(-foo(-980.5915,Arya),( -56 ),51)),-0.76) * -mislead() / mislead(rule(x * 25 - ( ( --670.173 ) )),COLS);
	protect(( ( ( x ) - Jon ) ),( Ygritte ),foo(Jon,betray(Arya),ROWS - bar(-mislead(),-160.537,--92) - Sansa)) + --130.5467
};
	if(Sansa - TABLE[-0.5][ROWS]){
	if(TABLE[( 68 )][-1]){

} else {
	if(1){
	x -= 1;
	if(99){
	Hodor *= TABLE[( -foo(COLS,( COLS ) * destroy(-mislead() + -( Arya ),TABLE[ROWS][-COLS / ( y / -Stark / 0.27 / 40 * bar(3) )])) ) + x - ROWS][protect(Stark + ( -Jon + ( TABLE[TABLE[Ygritte][( ROWS )]][( TABLE[-ROWS][-Arya] )] - ( 4 * -340.38 ) ) ) / COLS,Stark,( Arya ))] - ROWS * COLS;
	if(( 180.48 )){
	x -= -ROWS
} else {
	( -betray(bar(COLS),COLS) )
}
};
	if(betray(( dog ) + -mislead() * ( -TABLE[( 10 )][TABLE[foo(Sansa,( ROWS ))][ROWS]] ) + ( Hodor ))){
	Arya /= COLS;
	Hodor *= betray(protect(-TABLE[Sansa][0.45],-1,COLS))
}
};
	if(-0.67){

} else {
	Arya;
	Ygritte += ( protect() ) * COLS * -( Ygritte ) / rule(ROWS / Jon);
	if(dog){
	Arya += COLS;
	bar(-0.77) / -bar(destroy(x,---TABLE[-850.36][COLS] - -( mislead(( y ),TABLE[Stark][690]) ))) * 67
} else {
	if(TABLE[( -protect(-0.84,( ROWS ),betray(protect() - destroy(TABLE[bar(-0.25) * Arya * Arya][( x ) * foo() - -TABLE[( COLS )][mislead(Sansa,( COLS ),-0.01) * Ygritte]],0.52,0.84 - ( -( COLS - mislead(Jon,-1) ) - betray() )))) ) * mislead(rule(Ygritte,destroy(Arya,( 930.1912 ),-rule(( ROWS ),ROWS,COLS)),810.48))][Ygritte]){
	if(Hodor){
	dog -= ( ( --COLS - TABLE[Sansa][-620.7 / foo(500.01) + -0.67 + 0.57] ) )
} else {
	-mislead(--0.93,Jon,COLS * Stark);
	Jon += y - destroy(( dog ),rule());
	x /= ROWS
};
	Sansa += ( ( TABLE[-destroy(--0.09 * -( Sansa + -( -800 ) ),-1)][570.3376] ) )
}
}
};
	ROWS
};
	if(-29){
	-foo(destroy(ROWS,Stark,-39)) / betray(dog)
} else {
	x /= destroy()
}
} else {

}
};
	if(COLS / ( ( x ) )){
	Hodor -= -39;
	if(TABLE[COLS][bar(Arya)]){
	-0.48;
	-0.31;
	Ygritte += 980.8
} else {
	if(Hodor){

};
	-27
}
} else {
	Stark /= TABLE[95][protect(TABLE[Hodor][( TABLE[-260.6812][-Arya] )],COLS * 76)];
	Sansa += Stark
}
}
};
	Ygritte += mislead(-93,rule())
} else {
	if(( foo(COLS - TABLE[( 0.56 )][( -bar(bar(rule(( -1 )),Sansa)) )],COLS,betray()) )){
	if(betray(-1,COLS)){
	Hodor -= y;
	Sansa *= 88;
	if(destroy(--ROWS,( bar(-0.34 + ( ROWS ) * Arya,mislead(-( betray() ),COLS)) ),( Sansa ))){
	if(protect(destroy(-foo(--( 0.46 ))))){

};
	y -= ( ROWS )
}
};
	-Hodor;
	--0.14
};
	-0.7
}
}
assert COLS : "What do we say to the Lord of Death?"
var Arya = -bar(x,-ROWS) / Arya / ( ( -0.46 ) + ( ROWS ) * -0.53 )
def rule(Sansa,Jon){
	dog;
	if(( -foo(Ygritte) )){
	Ygritte;
	if(-75){
	--COLS / Stark;
	x -= ( 0.88 + betray(betray(( COLS ),( ( ( -( y ) ) ) ),0.03 * --0.57),( ( protect(72) ) - dog ) + 89 / x) ) - ( destroy(-730.234) )
} else {
	if(( TABLE[dog][dog + --mislead() + -0.27 / -( protect(0.22) ) * --5] )){
	-dog;
	TABLE[TABLE[-( TABLE[TABLE[( foo(( Stark ),ROWS) )][-( protect(Ygritte,bar(),foo(( 61 * -0.84 ),---mislead(destroy(-10,( ( -ROWS ) ),-0.91),ROWS) + TABLE[( y )][dog]) - 78) )]][( ROWS )] )][-foo(mislead(-0.04,TABLE[COLS][( mislead(1 / Stark,dog) * ROWS )]))]][-0.36]
};
	if(TABLE[-1 - ( bar(ROWS) * ROWS ) - dog][-y]){
	Sansa -= TABLE[-Stark][COLS];
	Ygritte += 1
};
	Stark -= ( 30 )
};
	Arya += TABLE[protect(970.2,mislead(TABLE[Arya][( --56 )],( -110.15 / Sansa / COLS - ROWS )),-bar())][-1 - 68]
} else {
	if(bar(bar(ROWS + Hodor))){
	1;
	Stark *= ( -2 )
} else {
	Stark += y
};
	if(protect()){
	dog += -110.1
};
	TABLE[-ROWS * 0.38][0.4]
}
}
assert Ygritte : "Winter is coming"
var Sansa = ROWS
def destroy(){
	bar(( 1 ))
}
def foo(Ygritte){

}
def TABLE[COLS * 1][j] {
	Sansa -= COLS;
	Arya += -0.19
}
assert ( Stark ) : "Nothing burns like the cold."
var Ygritte = Jon
def TABLE[Arya][k] {

}
assert Sansa : "One can not simply parse himself"
var Ygritte = dog
var Stark = TABLE[1][rule(( rule(TABLE[COLS][destroy(( COLS )) * -rule()],( ( destroy(( x )) ) ),Ygritte) ),-75 / -0.85)]
var Stark = -foo(TABLE[--( ( ( ( ROWS ) ) + rule(Arya) ) )][-50])
var Sansa = COLS
assert y : "Nothing burns like the cold."
def betray(dog){
	if(-dog){
	if(( mislead(( Jon ),bar(( bar(bar(y,-60,-66),TABLE[( ( 34 ) )][dog],0.95) )) / ( -Hodor * -foo(-92,Stark) * COLS ) / -22 + ( ROWS ) + ( TABLE[--Arya][-65] ) + -0.91,rule()) )){
	if(-COLS){
	Stark;
	if(Ygritte){
	Sansa /= betray(( ( protect() ) ) + -1,ROWS);
	( 750.9043 ) - Arya
}
}
}
} else {
	if(( TABLE[1000.487][25] )){

} else {
	if(mislead(( ( ROWS ) ),150.5)){
	ROWS;
	if(-1){

} else {

}
} else {
	dog /= Ygritte
};
	x += -bar()
};
	Sansa += ( ( 5 ) ) - --( Arya )
};
	if(90){

}
}
var Hodor = 510.382
def TABLE[-Hodor][k] {
	y += ( ( ROWS ) );
	-( Ygritte ) + Jon
}
assert 10 : "One can not simply parse himself"
def betray(Arya,Stark){
	-45;
	( ( 1 ) )
}
def TABLE[foo(betray(rule(( bar(TABLE[-( ( 33 ) )][0.02],Sansa,-1) ))),-( ---1 * COLS * -0.15 / 1 ))][i] {
	if(-x){
	if(y){
	if(7){
	x *= mislead(Sansa);
	if(foo(( ROWS + Stark ),Sansa)){
	if(( destroy() )){
	if(( Stark )){
	-0.22;
	( -mislead(--940.929,Stark,TABLE[COLS][( -0.34 - -0.99 / bar(COLS) * -destroy(78) + -0.32 ) + ( Stark ) / 0.29] + ( protect(y) ) + Arya / dog) )
};
	if(-840.943){
	bar(rule(x),bar(( COLS - bar(-( protect(y,-78) + Hodor ) / -70 / x / --0.56 - ( TABLE[-( -490.9 )][-TABLE[-Stark][Arya] + x] ),-Stark) - 22 ),( COLS )),Arya);
	Jon -= ( mislead() )
} else {
	Hodor += ( Arya )
}
} else {
	-ROWS;
	if(ROWS){

} else {
	ROWS
};
	if(destroy(0.47,COLS)){
	Hodor -= TABLE[( betray() )][COLS];
	if(-52){
	-2;
	ROWS
} else {
	-Sansa
}
}
}
}
};
	( ( y + -10 - -destroy(mislead(-0.97) * Sansa,-bar(--Jon,( --Jon ))) ) )
} else {
	( ( betray(x) - COLS ) );
	if(protect()){
	( -0.82 );
	destroy(COLS,-0.4)
} else {
	Stark += -16;
	if(( Sansa + COLS + protect(-Arya * bar(( bar(dog,Sansa) ),Ygritte) * -0.83,destroy() - -mislead(rule(-bar(-880.6,dog) / rule(-1,ROWS),( betray(Sansa,( -Sansa )) * -1 ))),-destroy(--15 * x,rule() * -47 / mislead(-12 + -0.66,---COLS,--16),-1) + betray(-TABLE[-80.2][betray(TABLE[betray(mislead(( ---0.39 / mislead() )) * 0.2,( -destroy(x) ))][rule()] / -Hodor)])) - ROWS )){

}
};
	betray()
}
};
	Hodor - -98;
	if(-betray(TABLE[--0.6][TABLE[--70 / betray(COLS) - dog][protect(mislead(( ROWS ),Arya),-TABLE[-Jon][-( -foo(---mislead(1,-0.61)) )])]])){
	x += COLS;
	y;
	if(-( COLS )){
	Arya;
	Stark /= -bar() / ROWS
} else {
	Hodor -= x;
	ROWS
}
}
}
def destroy(Ygritte,y){

}
assert -1 : "Winter is coming"
assert bar(COLS,-85,-1) : "Winter is coming"
assert bar(-( --0.98 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[---1][k] {

}
def TABLE[Jon][k] {
	if(ROWS){
	Sansa -= 0.95
} else {
	-ROWS;
	if(foo(1,-y)){
	( ( 0.72 ) )
}
};
	Arya -= dog - TABLE[( ( 7 ) )][Jon]
}
def protect(Ygritte,x,Sansa){
	71;
	if(Hodor){
	if(Ygritte / protect(( TABLE[Hodor * ROWS][Ygritte] + betray(dog,-( ( 56 ) / y + -( ( ( -destroy(1,Ygritte / 35) ) ) ) )) ),rule(COLS)) / ( Sansa )){
	-COLS;
	Ygritte *= Ygritte
} else {
	if(-betray(dog,( 36 ))){

} else {
	rule(( -COLS ));
	Jon += Stark
};
	( 5 / Stark );
	y *= ( -( ROWS ) + ( ROWS ) )
}
}
}
def protect(Hodor,Arya,Ygritte){
	if(0.26 * TABLE[( ( destroy() ) )][COLS]){

} else {
	x *= -1;
	if(-0.67 - 860.2){
	dog += ( Sansa );
	Sansa += COLS;
	if(dog){
	y *= mislead(( Ygritte ));
	Arya *= destroy(betray(bar(62 / --protect(ROWS))),-COLS / rule(COLS,-43,TABLE[( ( Ygritte ) )][-y]))
}
}
}
}
def TABLE[75][k] {
	if(1){
	bar(( protect(TABLE[-TABLE[-47][ROWS]][Jon],TABLE[0.82][COLS],betray(dog) - 79) ))
}
}
def TABLE[1][i] {
	ROWS / --ROWS * ( protect(-49,( Hodor ) * destroy(Stark,TABLE[Jon][( mislead(x,Stark * protect(( 38 ) + -98 * ( -0.38 ),( betray(-ROWS,-Arya) ) - COLS - 2 - Hodor),( ( --ROWS * 48 ) )) )])) );
	1
}
var Hodor = destroy(dog,ROWS)
var Jon = COLS
var Ygritte = ROWS
def TABLE[-COLS][j] {
	Hodor *= COLS;
	Ygritte /= -0.12
}
def foo(x,Stark,dog){
	protect(-760.9,( ( ( Stark ) ) ))
}
def TABLE[( ( Ygritte ) )][k] {
	Jon /= ( Stark ) - foo(ROWS,--dog + foo(-( -( ( -72 ) ) - destroy(( -23 )) ),ROWS,TABLE[-TABLE[y + -( -destroy(-Arya,9,destroy(foo(-330.679),( TABLE[56][-2] ) - 1)) )][-28] + -Ygritte][-( -68 )]))
}
def mislead(Sansa){

}
var Sansa = dog - -destroy(48,rule(foo(ROWS),protect(( ( -430.7 * Ygritte ) )),( 0.88 )))
def mislead(Ygritte,dog,Hodor){
	if(0.69){
	if(TABLE[( ROWS )][x]){

} else {
	if(Stark){

}
};
	y -= 1;
	if(-0.78){
	if(betray(-( Ygritte + TABLE[protect(( -TABLE[ROWS][--831] ),Stark)][ROWS * -0.8] ),-COLS * ROWS)){

}
}
} else {

};
	Stark
}
def TABLE[-0.72][j] {
	dog -= y
}
def betray(Jon){
	Sansa += -42
}
def foo(Hodor){

}
var Ygritte = betray(TABLE[-Stark][( -0.04 )],-1,Hodor - mislead(( -1 ),betray(TABLE[Jon][TABLE[y][TABLE[COLS][TABLE[Jon][72]] + ( -81 ) / -20 - Ygritte] + COLS]),bar(0.39,( ROWS ) - 30)))
var Jon = -20
def bar(Arya,Ygritte,Sansa){
	if(( TABLE[100.074][y] )){
	mislead(--90);
	COLS
};
	if(foo(( -10 ),( ROWS ))){
	if(-x){
	x += rule(( -rule(ROWS,Arya - Stark + ( -81 )) )) / dog;
	COLS
};
	( ( TABLE[TABLE[dog][--protect(-0.12)]][rule(protect(-TABLE[( ( Stark ) )][-mislead(COLS,-foo(Stark)) - --betray(Sansa - -10) / -Sansa],-34),( TABLE[( ( Jon ) ) * Hodor][( ( -COLS ) )] ),ROWS) * rule(dog)] ) )
};
	-y * Sansa
}
var Stark = y
assert 29 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][k] {
	1
}
var Hodor = 1
var dog = COLS
def TABLE[-0.3 * Hodor][k] {

}
var x = 32 - ( 74 )
var Sansa = TABLE[( ( Jon ) )][62 + -Jon + -40]
var Hodor = protect(( betray() ) + -( ( TABLE[-ROWS][Sansa] ) ))
def TABLE[Sansa][i] {
	if(Jon){
	Stark *= --dog - Sansa - Sansa * 50;
	if(mislead(Jon,ROWS - -betray(-0.24 / Jon,ROWS))){
	Ygritte;
	COLS / ---94
} else {
	-mislead(-mislead(0.37,( ( --15 ) ),foo(-1,destroy(y,( mislead(0.48,1) ) - Ygritte))))
}
}
}
def TABLE[COLS][i] {
	if(destroy(mislead(Jon),betray(y,Arya,y),TABLE[COLS][TABLE[COLS][56]])){
	Hodor *= 76
} else {

}
}
var x = rule(-0.46,Arya,dog)
def TABLE[Hodor][i] {
	-370.263;
	if(COLS){
	x *= ( ROWS )
} else {
	Jon /= COLS;
	--Ygritte / ( betray(-COLS / ( ROWS ) / COLS / rule(( 1 )),-1) )
}
}
var y = -58
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( 0.76 )
def TABLE[foo(0.92,dog)][i] {
	Hodor /= foo(( mislead(77) ),Arya - ( ( y - rule(COLS,---57) ) ),-dog + Ygritte / mislead(TABLE[foo()][foo(protect(COLS,250.831),---0.67 - ( --17 ) / COLS)],foo(-ROWS)))
}
var Ygritte = ( ( Arya ) )
def destroy(Arya){

}
var Hodor = 730.8335
assert ( mislead(TABLE[rule(79,20,0.4)][( 0.64 )] * 22,Stark) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	x /= -betray();
	if(( ROWS ) - mislead(COLS)){
	-( -dog )
} else {
	Arya;
	TABLE[( TABLE[x][TABLE[( -mislead(-( ROWS + ( ( ROWS ) ) ) * destroy(rule(ROWS)) - 6 + mislead(( 0.23 )),( -x )) )][-37 / destroy(( 0.27 ) - TABLE[dog][COLS])]] )][Arya];
	if(TABLE[y][Sansa]){
	Ygritte *= rule(64,foo(--mislead() * foo(4,mislead(-32)) + protect() + ( betray() ),Arya,Stark * foo(Arya,TABLE[( -0.3 )][Arya],-Sansa * Jon * ( 25 ))));
	if(-( Arya ) / 1){
	if(TABLE[-( ( Ygritte / 19 ) ) + ( COLS )][Sansa + -protect()]){

} else {
	COLS;
	COLS - betray(COLS,--0.33,betray(protect(( ( 0.67 + -Hodor ) ),-( -0.47 + y ),Sansa),-69,( --0.7 - 0.88 ))) + -mislead(COLS,( TABLE[Jon][--x] ),destroy(360.5491,( -82 )) / destroy(-0.28,protect(COLS * 7) * bar(( --Sansa / 0.87 )),( betray(( ( destroy(-ROWS / Stark,-( rule() ) * TABLE[( -0.86 ) * --Hodor + x + betray(betray(TABLE[( -( -rule(y) ) ) + ( -13 - 860.2 - ( Ygritte ) ) * -0.18][( protect() ) - ( COLS )],( ( dog ) ),( -TABLE[--64][--7] )))][dog] * ( bar(-0.94,ROWS) ),Stark) ) ),0.48) )));
	if(TABLE[TABLE[ROWS][-( ROWS )]][( --0.37 )]){

} else {
	Sansa /= -74 / -0.75;
	( COLS )
}
}
}
} else {
	COLS - -210.5332
}
}
}
def TABLE[-0.98 * ROWS][k] {
	( x );
	COLS
}
def TABLE[--Ygritte][j] {
	if(foo(1)){
	x -= mislead(Jon,x - 1 - COLS / ( ( COLS ) ) + -53) / -dog;
	0.56;
	if(-( betray(( -( ROWS ) * COLS ) / COLS) )){
	Hodor /= -COLS
} else {
	y
}
};
	dog
}
def TABLE[( ( betray(( COLS ),( y ) + 25 * COLS) ) )][j] {
	bar(( Sansa ),-42)
}
var Stark = ( -57 )
assert protect(bar(Arya)) : "One can not simply parse himself"
var x = ( destroy(Ygritte,-rule(),-Jon / ROWS) )
assert betray(COLS) : "Nothing burns like the cold."
assert ROWS : "Nothing burns like the cold."
def destroy(Hodor){
	if(ROWS){
	if(58){
	x
}
} else {
	destroy(( Stark + ( COLS ) ))
};
	Arya -= ( -( dog ) );
	if(-1){
	if(( foo(Arya) / y )){
	if(destroy(-( ( rule() ) ),-ROWS)){
	if(Jon){
	if(-foo()){
	if(COLS){
	( rule() + ( ( rule(rule(0.09),betray(ROWS)) ) / Jon - ( --foo(-0.1,-destroy(( --ROWS * rule(destroy(0.13) + COLS,destroy(protect(Sansa,Stark,betray())),Jon) ))) ) ) / destroy(mislead(--99,( Stark )),TABLE[ROWS][34]) / Stark );
	-130.48
} else {
	if(Sansa / COLS){
	( -ROWS );
	if(ROWS){
	-1 / ( bar(COLS / Sansa,COLS,Arya) )
} else {
	if(ROWS){
	0.79
} else {
	if(-x){

} else {
	x /= 0.65
}
};
	COLS + -43
}
}
};
	if(x){
	-protect(( -13 ),Jon,-0.43)
} else {

}
} else {
	if(ROWS){
	if(bar(-96,-920.762 + -24,Jon)){
	Stark -= bar(betray(mislead(),( TABLE[( COLS - ( ( foo(-foo(y)) ) - Stark ) ) * Ygritte][COLS] )),( mislead() ) * bar(destroy(rule(( Hodor ),destroy(destroy(TABLE[TABLE[rule(dog * -1 + ( foo(-Ygritte * ( -0.63 - ( -830.774 ) - -210.619 ),1) ) / Sansa,0.12)][TABLE[protect(-x,( ( ( -TABLE[Hodor][-TABLE[( Hodor )][protect(-17)]] ) * destroy(1 / Hodor + -ROWS / -ROWS + ( ( -dog ) ),( 0.27 )) * betray(( Jon ),x) + ( TABLE[COLS * -( -62 )][73 / ( ROWS ) * COLS] ) + ( ( TABLE[ROWS][rule(COLS,( ( -bar(( rule(ROWS) ),Arya,dog) ) ))] ) ) ) ),Arya)][mislead(COLS,56)]]][--15],-( ( -90 ) ),y),ROWS / destroy(protect(90,0.78)),( bar() )),Ygritte) + ROWS)));
	COLS
} else {
	Arya /= 98
};
	( 75 );
	COLS
};
	0.01;
	rule(Stark)
}
};
	if(Ygritte - --COLS){
	if(-TABLE[COLS][( ROWS + ( ( ( 0.52 * protect(-1) - foo() ) ) ) + TABLE[-( -rule(destroy(( Jon )) * Jon) )][Hodor] )]){
	y -= -0.65;
	6
}
}
} else {
	ROWS;
	--Hodor;
	if(( Jon )){
	if(mislead(Ygritte) / 0.53){
	betray(( mislead(-430.82) ))
} else {
	if(mislead(COLS + -86,Sansa) - -protect()){
	Ygritte /= ( ( Ygritte ) );
	TABLE[-ROWS + -bar(Sansa)][0.38]
} else {
	Jon -= 1;
	if(x){
	--37
}
}
};
	Jon *= bar(90,mislead());
	if(Ygritte){
	if(-( destroy() )){
	Arya *= 44 * 82 - ROWS * -( -0.99 ) + -0.71
} else {
	( 1 )
}
} else {
	ROWS;
	if(-290.196){
	if(mislead()){
	y /= ROWS;
	if(-Jon){

};
	Arya += -1
};
	if(ROWS){
	--57;
	-ROWS
}
}
}
}
};
	( -1 )
} else {

};
	if(ROWS){
	( ROWS ) / ( mislead(( ROWS ) / 1) );
	Arya;
	60
} else {
	-ROWS;
	ROWS
}
}
}
def TABLE[bar()][j] {
	Arya += TABLE[-810.01][TABLE[0.91][betray(-0.46,ROWS - -74 * -destroy() + ( COLS ))]]
}
def betray(dog,Jon){

}
def rule(Ygritte,dog,Stark){
	if(( ROWS )){
	if(COLS){

};
	COLS
};
	dog /= destroy(-0.11)
}
var Sansa = protect(mislead(TABLE[-( ( -protect(( COLS ) + Hodor) ) )][destroy(( 1 ))],TABLE[-0.33][TABLE[dog][-( ROWS )]]))
assert ROWS / --Hodor * Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon){

}
def bar(Sansa){
	( 0.42 );
	if(foo(-50,0.86)){
	-Sansa;
	Sansa;
	--920.22 - TABLE[x * dog - ( -0.83 + TABLE[-foo(--39)][-0.04] )][rule(-97 * ( y ),-dog,destroy(protect(-0.92,( ( ROWS ) ) / 38 + -1),dog))]
} else {
	Stark *= 1;
	if(destroy(Arya)){
	Jon;
	if(protect(--( destroy(rule(COLS,( -x ))) ),TABLE[mislead(Jon,TABLE[0.31][48],-Ygritte) / mislead(ROWS)][ROWS],rule(0.4)) * x){
	if(Sansa){
	Sansa -= COLS
};
	ROWS
};
	if(-COLS){
	Stark /= ( ( ( Sansa ) ) );
	COLS
}
}
};
	if(--0.87){
	if(( Ygritte )){
	COLS
};
	if(-( Hodor )){

} else {
	Hodor /= ( Ygritte )
}
} else {

}
}
def TABLE[( -72 ) / ( -91 )][k] {
	if(x){

};
	( bar(-dog,( bar(-( COLS )) + betray(-1 + rule(--Stark * -COLS)) ) - Jon) ) * ROWS;
	if(-( COLS - --0.8 - ( -mislead(x,Sansa) ) ) + mislead()){
	Stark /= 44
}
}
def betray(){
	Ygritte += destroy()
}
def TABLE[ROWS][k] {
	TABLE[Ygritte][( destroy(Arya,-0.13) )];
	if(830.8){
	-0.55
};
	dog /= COLS
}
assert -ROWS : "One can not simply parse himself"
def TABLE[( y )][i] {
	protect(-Ygritte,Jon,dog);
	Arya -= protect(--1)
}
var dog = bar(foo(COLS,rule(foo(),ROWS)))
def foo(Arya){
	if(1){
	Arya *= Stark * -TABLE[ROWS][TABLE[TABLE[0.56][Ygritte]][0.72 - foo(-( ( betray(foo(COLS * mislead(TABLE[ROWS][140.952])) * -90,2) ) ),-COLS,( x ))]];
	if(( TABLE[ROWS][COLS] )){
	if(Stark){
	COLS / mislead(( ( bar(Stark,foo(Jon)) ) ) - ( --ROWS ));
	-rule(( Stark )) / -0.95;
	( mislead(betray(-foo(( ( Jon ) ) * protect(-1)) + ( COLS ) - 1 + --( COLS )),betray(y),foo(COLS + -Ygritte)) )
} else {
	if(ROWS){
	Hodor *= ( foo(-0.39 + 58,foo(y / foo(Stark))) / -0.36 );
	0.81
}
};
	x
};
	dog *= TABLE[TABLE[protect(Ygritte,-foo(destroy(-TABLE[-ROWS + ( betray() * Jon )][foo(-( COLS ),Ygritte,ROWS)],( ( x ) ),Ygritte)))][betray(( Sansa ))] / -12][mislead(-( 86 ),76) / 0.61 * mislead(Sansa / foo(mislead(y)),1)] + ( mislead(-0.44 + --foo(( bar() )) / Arya) )
};
	Jon /= COLS;
	Sansa += ( COLS ) - ( Arya )
}
var Sansa = ( ROWS )
var x = ( foo(( -TABLE[Hodor][foo(ROWS,--57)] )) ) - Ygritte
def destroy(){
	if(y){
	if(--27){
	81;
	if(( protect(-0.96 - Ygritte,--mislead(ROWS,( --800.1 )),1 * --( -ROWS ) * mislead(Hodor - -destroy(COLS) / -bar(Arya,( ( betray(destroy(( TABLE[foo(ROWS,betray(--0.62,TABLE[( -91 / -destroy(( 0.81 ) * Sansa * Jon) / ( COLS ) * 2 / 0.69 + TABLE[-( mislead(510.529,ROWS,( -Sansa / ( -mislead(ROWS - ( 0.77 ),( ( Jon ) ),-( rule(-0.35) ) * ( -530.08 )) ) )) )][( Stark + ----( destroy(dog,x) ) + ( 58 ) - ( ROWS ) * 0.91 / Ygritte - ( ROWS ) )] )][-0.27 + COLS]))][mislead(x)] ),-0.09)) ) )) - ROWS * 46) - ( -1 ) / mislead() / Arya) )){
	610.88;
	if(Hodor){
	if(COLS + y / ( ROWS )){
	Sansa
} else {
	foo(foo(),-foo(COLS,TABLE[( ( --1 ) )][destroy(ROWS)]));
	if(-dog){
	Sansa /= 0.06
} else {
	if(Stark){

} else {
	if(bar(---x,( TABLE[( 1 )][-TABLE[( ROWS )][0.33]] ))){

};
	( bar() );
	0.71 / -1
}
};
	if(rule(-0.35)){
	destroy(rule() - Hodor,dog);
	if(-protect(ROWS - bar(y),dog)){
	foo(TABLE[( Jon ) / Arya][destroy(x,( ( dog ) ))],-( -Hodor ));
	if(( 0.05 )){
	if(mislead(-0.43) / Jon){
	dog += ---Arya - Arya / 28;
	bar(destroy(-Stark,Ygritte),Arya) / foo(mislead(mislead(TABLE[--mislead(( -87 ))][( -Ygritte )]),( bar(Sansa,( -( ROWS ) )) )));
	1
}
} else {
	Hodor *= ROWS;
	destroy(-0.76,protect(rule(rule(Hodor,( COLS )),-50,ROWS),betray(TABLE[ROWS][Ygritte],Arya,bar(ROWS) / --Jon * destroy() - Arya)))
};
	y *= Arya
}
} else {
	Hodor -= x
}
}
}
};
	dog -= -protect(Arya,COLS,-0.02) / COLS
} else {
	Hodor *= --( 0.77 );
	if(TABLE[-1][Sansa / Sansa]){
	--1 / -680.224;
	if(-betray(TABLE[y][-COLS])){
	protect(TABLE[Hodor][ROWS])
};
	if(COLS){
	TABLE[protect(dog,Stark,COLS) + Hodor][foo(ROWS,TABLE[( -Arya ) + Ygritte][Sansa]) - y];
	if(( -0.94 )){

}
} else {
	62
}
} else {
	( dog )
}
};
	if(( ( COLS - -( -COLS ) / Arya ) )){

}
};
	if(protect()){
	destroy();
	if(( mislead(Ygritte,Hodor,y - protect(Ygritte,TABLE[( -COLS ) * x][rule(bar(Stark))]) + Arya * -76 * TABLE[-ROWS][610.343]) )){
	Hodor
} else {
	( -betray(TABLE[---29 / --( ( TABLE[( protect(-( -ROWS ) + ( ( ( y ) ) )) )][( TABLE[Stark][Arya] )] ) ) / -ROWS][destroy(1)] / -ROWS + betray(mislead(0.22),COLS + --ROWS),Stark) );
	if(foo(destroy(Stark + -COLS - TABLE[ROWS][ROWS],COLS),( COLS ),foo())){
	Sansa /= Sansa - Stark - y + TABLE[COLS / 1][( ROWS )] - ( ( -ROWS ) )
}
};
	y
}
}
def TABLE[ROWS][j] {
	if(( ROWS * y )){
	Ygritte -= Arya;
	if(--foo(y) - 0.8){

} else {
	rule(Ygritte,-TABLE[mislead(-bar(-ROWS))][Ygritte],--TABLE[ROWS][0.14] / ( -COLS ) * rule(destroy(-0.87 + COLS / TABLE[Ygritte][dog] + -1 - --COLS - -ROWS - TABLE[( -bar(91,protect(TABLE[( dog ) + -78][( Stark )],0.33),foo(-ROWS,--670.192)) )][0.75] - COLS * -ROWS / dog,COLS,( ROWS ) - --Jon + ( -( -dog + ( --bar(rule(Hodor,Jon,( Arya )),x) ) ) ) - x / ( COLS - y ))));
	Jon /= TABLE[foo(Jon) + -65][-( ( ( Arya ) - TABLE[( --Ygritte )][protect(-0.09 + 1,( ROWS ),dog - ROWS - ( 0.21 ))] / ROWS ) - ROWS )];
	x
}
} else {
	dog *= -1
};
	if(1){
	foo(( COLS ))
}
}
def TABLE[20][j] {

}
assert -Arya : "What do we say to the Lord of Death?"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.21 + 180.931][j] {
	TABLE[Sansa][( COLS )]
}
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	if(( --TABLE[-77][x] * -( ( -rule() / Jon / --Jon * ( dog - rule() ) - bar(38 / -62,-0.99) ) ) * TABLE[ROWS][TABLE[ROWS * 0.94][-25]] / destroy(-10) ) * TABLE[-Arya][protect(( 340.9164 ))] / 4){

} else {
	if(foo(TABLE[Hodor][y * Hodor - -1],( Sansa ),-40)){
	Stark /= 0.79;
	bar(-( rule() ) - Jon * 0.31 * -( ( TABLE[ROWS][protect(x)] ) / destroy() ));
	if(ROWS){
	Ygritte /= ROWS;
	if(( betray(ROWS) )){
	Ygritte /= -mislead(ROWS,x,protect(( ROWS ),0.03,( ( Jon * betray(ROWS,Jon,-destroy(rule(COLS) - COLS,bar(Sansa,--0.31) - y / -Hodor,COLS) - ( --ROWS )) ) )))
};
	if(protect(--900.66,-Sansa - bar(Hodor) / y)){
	if(-30.2261){
	x -= Stark;
	if(Ygritte){
	0.75
} else {
	-40.532 - foo(( destroy(-1,( Hodor )) ),ROWS);
	Ygritte -= Sansa + TABLE[mislead(-1 + -COLS,foo(ROWS,Sansa,--protect(( ( --56 ) )) - Jon),-TABLE[TABLE[dog][bar(Hodor,COLS) / --30] / ( --0.39 )][-Arya])][-( ROWS ) / -Jon] + Jon;
	Sansa *= -Stark
}
}
} else {
	0.81;
	if(520.361 * mislead(betray(ROWS),-890.1458,Jon) + TABLE[-89][ROWS]){
	Sansa /= -80
} else {
	Hodor += x;
	Jon += TABLE[COLS][y]
}
}
}
} else {
	bar(Sansa,( ( ROWS ) ) * COLS / -ROWS,-0.17 - 0.2 / Ygritte);
	Sansa *= Hodor
};
	( mislead(Hodor,TABLE[( -0.02 )][-90]) )
};
	y += Sansa
}
def TABLE[-TABLE[-foo(betray(),-0.09)][-COLS]][k] {
	if(Hodor){
	protect(( ( ( mislead(destroy(COLS,destroy(mislead(TABLE[foo(( 1 )) / -Arya][-0.93],COLS,destroy(( TABLE[y][( rule(-0.41,bar()) ) - x] ),mislead(Arya),( TABLE[TABLE[0.36][300.24]][-0.39] ))) * -ROWS,ROWS,dog),foo(protect()))) ) - ROWS ) * 40 )) - ( --protect(foo(COLS,( Ygritte )),protect(mislead(betray(x - ( ( bar(COLS) ) ),COLS) / --mislead(( ROWS )) / Jon),-460.56)) * Arya / foo() / Sansa * COLS );
	Sansa *= -0.41
} else {
	y -= foo(( 0.34 ))
}
}
def TABLE[-COLS][j] {
	--1
}
def destroy(dog){

}
assert Hodor : "One can not simply parse himself"
var Stark = foo() + Ygritte
def TABLE[ROWS][j] {
	x -= betray(0.97,-mislead(-dog,-1) - ROWS / COLS);
	( -Jon )
}
def TABLE[COLS][k] {
	Jon += -Jon
}
def rule(y,Ygritte,Ygritte){
	y;
	-66
}
def protect(Hodor){
	if(-74){
	( Ygritte + ( Stark ) );
	Arya -= ( ( mislead(-x,--ROWS - -10.2,( -( foo() ) )) ) )
} else {
	Arya /= mislead(foo(TABLE[260.632][foo(-0.11,COLS)] * -41 * -8,-( Hodor )))
}
}
def TABLE[Ygritte][i] {
	Ygritte /= ROWS;
	Arya -= ( ( ( foo(-0.27,x) ) ) ) / ( bar(( destroy(Stark) ),1,TABLE[foo(COLS - -31 * 1,-18)][-0.02 / TABLE[COLS][-( 3 - dog )]]) )
}
var Jon = -510.148
assert rule(ROWS,rule(TABLE[Sansa][16],COLS) + Sansa) : "One can not simply parse himself"
def TABLE[( mislead() ) - -( destroy() ) / destroy(1,-COLS)][k] {
	20
}
assert dog : "Nothing burns like the cold."
var Arya = --44
def TABLE[-x - -Arya * -destroy(Stark,dog)][i] {
	x += Jon - COLS;
	if(--COLS - ROWS / 0.87){
	Sansa *= foo(bar(),dog);
	Hodor /= -22;
	if(destroy(-ROWS,Sansa)){

}
}
}
def betray(y){
	if(170.1){

} else {

};
	dog += ( COLS )
}
def betray(x){
	Hodor -= ---53
}
def TABLE[( dog )][k] {
	970.1;
	if(-0.16){
	if(-( mislead() )){
	foo(betray(COLS,-420.98),-1)
}
}
}
assert TABLE[y][TABLE[Hodor][( y )]] : "What do we say to the Lord of Death?"
def TABLE[-( ( Sansa ) ) + -Sansa / 1][j] {
	( COLS ) + x
}
def TABLE[-( ( ( ( ROWS ) ) ) )][k] {
	dog += Hodor
}
def TABLE[protect(Ygritte,40)][k] {
	betray(8 / ( ROWS ),Sansa);
	Stark += --0.98 / x + Arya * 0.3 * -( betray(-0.56) ) - Arya * COLS;
	y += ( Sansa )
}
def TABLE[1][j] {
	if(87){
	foo(protect(Arya),dog)
};
	if(1){
	x += ( TABLE[0.35][( foo() )] )
}
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
def mislead(dog,Hodor){
	y /= ROWS;
	( COLS / bar(-COLS,--890.91 + -650.05) / ( mislead(1) ) )
}
var Stark = TABLE[--foo(-0.84)][Jon]
var Hodor = mislead()
var x = Ygritte
assert protect(-0.71,protect(protect(( 80 )),-x * --( Ygritte ) * ( mislead(ROWS,99 / ( TABLE[bar(-( ( -ROWS ) ),( -44 ),( 50.51 ))][mislead(ROWS,-0.61,ROWS)] ) * protect(ROWS,-foo(COLS,dog / foo(Hodor * --( Ygritte ) - foo(betray(),TABLE[-1][betray()] - ( --COLS + protect() ) + ( ( -32 ) ) / dog,-COLS),92),( -( bar(( COLS )) ) )),Jon)) ) - ( Sansa ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-350.397 * ROWS][i] {
	if(Stark){
	-dog / ( Ygritte )
} else {
	if(-TABLE[Hodor][53]){
	Jon *= TABLE[-( --0.62 )][( Sansa )];
	dog += ROWS / ( foo(ROWS,ROWS / Stark,( rule(( TABLE[-240.7][Sansa] ) * 35,x,-1) - -0.72 )) - 42 * ( COLS ) ) * -ROWS
} else {
	-x;
	if(betray(dog)){
	Ygritte -= -Jon
} else {
	x += ( protect(( -0.14 + mislead() ),foo(( ( ( -61 ) ) ) - destroy(( ( Hodor ) ),--ROWS * Ygritte),( -( ( -( -Stark ) ) ) ),Jon),---16 + ( -Arya )) )
}
};
	if(-ROWS / 48){
	y -= COLS;
	if(( -ROWS )){
	if(-COLS){

};
	ROWS + Arya;
	if(Ygritte){
	ROWS
}
} else {
	Ygritte
}
}
};
	-Jon - Jon;
	if(foo(mislead())){
	( COLS );
	if(TABLE[rule()][( y )]){
	dog *= betray(protect(Stark - 1 / Arya,bar(18),y),-ROWS,-78);
	ROWS;
	y += -0.65 + ( COLS ) - -TABLE[( ( ROWS ) )][-bar(Hodor,Sansa,( ROWS ))] * -24
} else {
	if(--800.16){

} else {
	ROWS / TABLE[ROWS][COLS];
	x -= -1;
	x += x
};
	if(dog){

} else {
	if(-TABLE[-0.39][foo(90) / TABLE[dog][dog]]){
	if(( ( -y ) )){
	x;
	y /= Arya
};
	if(( ( 42 ) )){
	( --rule() ) * TABLE[( -rule(-( 56 ) / -foo(Jon),COLS) ) * -( ( betray(--30,TABLE[( 1 )][rule(Sansa,-COLS,rule())] + 53,( Stark )) + ROWS / ROWS / ( destroy(( ---destroy(dog,( bar(-COLS - rule(( 65 ),( --1 )) / mislead(-0.66,bar(betray(),-0.3)) + -1 + ( mislead(( ( x ) )) ) / -Jon + Jon / ( ( -670.294 ) )) ),protect(( betray(protect(),Sansa) ),--TABLE[25][( COLS / foo(-370.8 - COLS,x,( Arya )) )] + 0.79) / bar(destroy(COLS,-0.35))) )) ) + rule(Ygritte) * ( ( -Hodor / destroy() + rule(TABLE[( 88 )][Stark / --foo(-1,TABLE[x][-26 / -9 + -0.69])],( -dog ),58) ) ) - dog ) )][22]
}
} else {

}
};
	-Sansa
}
} else {
	Jon -= -1
}
}
def TABLE[-92][k] {
	if(--130.7 + Ygritte){
	Arya += ( y );
	if(( protect(1,-rule(-Stark),COLS / ( -39 )) + 12 )){
	if(COLS){
	destroy(ROWS / ( y ))
} else {
	if(foo(ROWS - -( TABLE[---1][COLS] ) * ( 270.1 ) - ( TABLE[Stark][Arya - --1 - TABLE[--1][--Sansa]] ) + --1 * foo(TABLE[( -0.85 )][-COLS]))){
	Arya *= ( ( -1 ) )
} else {
	Hodor *= ( ( dog ) );
	x
};
	if(( protect(( x )) )){

} else {
	dog -= ROWS
}
}
}
};
	if(Hodor){
	Ygritte *= -( bar(-1,destroy(COLS)) )
}
}
def TABLE[0.91][k] {
	-0.14;
	COLS
}
assert 0.96 : "Nothing burns like the cold."
assert ( -protect(-11,COLS) + -foo(0.62,x * betray(COLS) / -470.2 + 92) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	bar(-0.93 - --33,-760.199);
	if(Ygritte){
	x += -0.94
} else {
	if(rule(COLS,ROWS,-ROWS)){

} else {
	( 0.11 )
};
	Jon *= -1
}
}
def betray(Sansa,y){
	dog /= y
}
assert 5 : "What do we say to the Lord of Death?"
def destroy(){
	ROWS - -0.58;
	if(TABLE[betray(0.01)][mislead()]){
	Jon += COLS;
	x /= COLS
} else {

}
}
var Stark = Arya
var y = ( dog ) / -93
assert -0.18 : "Nothing burns like the cold."
assert Stark : "Winter is coming"
assert -ROWS - ( bar(Jon,bar(),foo(betray(COLS,protect(rule(( ( COLS ) ))) + ( -ROWS ) + ( ( TABLE[Arya * Hodor + ROWS + TABLE[-Ygritte][Hodor - dog - ( COLS )]][0.92] ) )))) ) * ( -( -x - TABLE[( ( TABLE[bar(dog) + ( Stark )][-1] ) ) * -ROWS + ( betray(( mislead(ROWS,Sansa) + -0.28 ),-ROWS) )][destroy(91)] ) ) : "One can not simply parse himself"
var y = -TABLE[( -betray(( mislead() )) ) - -x][( ( -( --ROWS ) ) )] + ( 1 )
def TABLE[ROWS][i] {

}
var Stark = dog
def foo(Arya,y,Ygritte){
	Arya
}
var Ygritte = destroy(Ygritte * 50,Stark)
assert Ygritte / -TABLE[0.46 * foo()][TABLE[-0.88 + 1 - --Arya - -17][1]] : "What do we say to the Lord of Death?"
def foo(x,Arya){

}
assert TABLE[Arya][-COLS + TABLE[Sansa][-( ROWS )]] + mislead(( Jon ),-56,ROWS) : "Fear cuts deeper than swords."
def destroy(y,Arya){
	betray(Jon,13,65)
}
def rule(Sansa){
	Hodor /= COLS;
	Arya;
	if(TABLE[0.25][-Sansa]){
	-0.93
} else {
	Sansa;
	-( mislead(dog) ) + ---300.671 - --0.02
}
}
assert x : "Winter is coming"